

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 03 20:41:03 2025

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.41
    36                           ; Generated 25/01/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189                           
   190                           	psect	idataBANK0
   191  0FCE                     __pidataBANK0:	
   192                           
   193                           ;initializer for _message1
   194  0FCE  3454               	retlw	84
   195  0FCF  3465               	retlw	101
   196  0FD0  346D               	retlw	109
   197  0FD1  3470               	retlw	112
   198  0FD2  3420               	retlw	32
   199  0FD3  343D               	retlw	61
   200  0FD4  3420               	retlw	32
   201  0FD5  3430               	retlw	48
   202  0FD6  3430               	retlw	48
   203  0FD7  342E               	retlw	46
   204  0FD8  3430               	retlw	48
   205  0FD9  3420               	retlw	32
   206  0FDA  3443               	retlw	67
   207  0FDB  3420               	retlw	32
   208  0FDC  3420               	retlw	32
   209  0FDD  3400               	retlw	0
   210                           
   211                           	psect	idataBANK1
   212  0FBE                     __pidataBANK1:	
   213                           
   214                           ;initializer for _message2
   215  0FBE  3452               	retlw	82
   216  0FBF  3448               	retlw	72
   217  0FC0  3420               	retlw	32
   218  0FC1  3420               	retlw	32
   219  0FC2  3420               	retlw	32
   220  0FC3  343D               	retlw	61
   221  0FC4  3420               	retlw	32
   222  0FC5  3430               	retlw	48
   223  0FC6  3430               	retlw	48
   224  0FC7  342E               	retlw	46
   225  0FC8  3430               	retlw	48
   226  0FC9  3420               	retlw	32
   227  0FCA  3425               	retlw	37
   228  0FCB  3420               	retlw	32
   229  0FCC  3420               	retlw	32
   230  0FCD  3400               	retlw	0
   231  0042                     _RD2	set	66
   232  0043                     _RD3	set	67
   233  0044                     _RD4	set	68
   234  0045                     _RD5	set	69
   235  0046                     _RD6	set	70
   236  0041                     _RD1	set	65
   237  0040                     _RD0	set	64
   238  003C                     _RC4	set	60
   239  003F                     _RC7	set	63
   240  003E                     _RC6	set	62
   241  003D                     _RC5	set	61
   242  0034                     _RB4	set	52
   243  0088                     _TRISD	set	136
   244  043C                     _TRISC4	set	1084
   245  043F                     _TRISC7	set	1087
   246  043E                     _TRISC6	set	1086
   247  043D                     _TRISC5	set	1085
   248  0434                     _TRISB4	set	1076
   249                           
   250                           	psect	strings
   251  0003                     __pstrings:	
   252  0003                     stringtab:	
   253  0003                     __stringtab:	
   254                           
   255                           ;	String table - string pointers are 1 byte each
   256  0003  1BFF               	btfsc	btemp+1,7
   257  0004  280D               	ljmp	stringcode
   258  0005  1383               	bcf	3,7
   259  0006  187F               	btfsc	btemp+1,0
   260  0007  1783               	bsf	3,7
   261  0008  0800               	movf	0,w
   262  0009  0A84               	incf	4,f
   263  000A  1903               	skipnz
   264  000B  0AFF               	incf	btemp+1,f
   265  000C  0008               	return
   266  000D                     stringcode:	
   267  000D                     stringdir:	
   268  000D  3000               	movlw	high stringdir
   269  000E  008A               	movwf	10
   270  000F  0804               	movf	4,w
   271  0010  0A84               	incf	4,f
   272  0011  0782               	addwf	2,f
   273  0012                     __stringbase:	
   274  0012  3400               	retlw	0
   275  0013                     __end_of__stringtab:	
   276  0013                     STR_3:	
   277  0013  3443               	retlw	67	;'C'
   278  0014  3468               	retlw	104	;'h'
   279  0015  3465               	retlw	101	;'e'
   280  0016  3463               	retlw	99	;'c'
   281  0017  346B               	retlw	107	;'k'
   282  0018  3473               	retlw	115	;'s'
   283  0019  3475               	retlw	117	;'u'
   284  001A  346D               	retlw	109	;'m'
   285  001B  3420               	retlw	32	;' '
   286  001C  3445               	retlw	69	;'E'
   287  001D  3472               	retlw	114	;'r'
   288  001E  3472               	retlw	114	;'r'
   289  001F  346F               	retlw	111	;'o'
   290  0020  3472               	retlw	114	;'r'
   291  0021  3421               	retlw	33	;'!'
   292  0022  3400               	retlw	0
   293  0023                     STR_5:	
   294  0023  3466               	retlw	102	;'f'
   295  0024  3472               	retlw	114	;'r'
   296  0025  346F               	retlw	111	;'o'
   297  0026  346D               	retlw	109	;'m'
   298  0027  3420               	retlw	32	;' '
   299  0028  3474               	retlw	116	;'t'
   300  0029  3468               	retlw	104	;'h'
   301  002A  3465               	retlw	101	;'e'
   302  002B  3420               	retlw	32	;' '
   303  002C  3473               	retlw	115	;'s'
   304  002D  3465               	retlw	101	;'e'
   305  002E  346E               	retlw	110	;'n'
   306  002F  3473               	retlw	115	;'s'
   307  0030  346F               	retlw	111	;'o'
   308  0031  3472               	retlw	114	;'r'
   309  0032  3400               	retlw	0
   310  0033                     STR_4:	
   311  0033  344E               	retlw	78	;'N'
   312  0034  346F               	retlw	111	;'o'
   313  0035  3420               	retlw	32	;' '
   314  0036  3472               	retlw	114	;'r'
   315  0037  3465               	retlw	101	;'e'
   316  0038  3473               	retlw	115	;'s'
   317  0039  3470               	retlw	112	;'p'
   318  003A  346F               	retlw	111	;'o'
   319  003B  346E               	retlw	110	;'n'
   320  003C  3473               	retlw	115	;'s'
   321  003D  3465               	retlw	101	;'e'
   322  003E  3400               	retlw	0
   323  003F                     STR_2:	
   324  003F  3454               	retlw	84	;'T'
   325  0040  3469               	retlw	105	;'i'
   326  0041  346D               	retlw	109	;'m'
   327  0042  3465               	retlw	101	;'e'
   328  0043  3420               	retlw	32	;' '
   329  0044  346F               	retlw	111	;'o'
   330  0045  3475               	retlw	117	;'u'
   331  0046  3474               	retlw	116	;'t'
   332  0047  3421               	retlw	33	;'!'
   333  0048  3400               	retlw	0
   334  0049                     STR_1:	
   335  0049  3457               	retlw	87	;'W'
   336  004A  3461               	retlw	97	;'a'
   337  004B  3472               	retlw	114	;'r'
   338  004C  346E               	retlw	110	;'n'
   339  004D  3469               	retlw	105	;'i'
   340  004E  346E               	retlw	110	;'n'
   341  004F  3467               	retlw	103	;'g'
   342  0050  3400               	retlw	0
   343                           
   344                           ; #config settings
   345  0000                     
   346                           	psect	cinit
   347  07DD                     start_initialization:	
   348  07DD                     __initialization:	
   349                           
   350                           ; Initialize objects allocated to BANK1
   351  07DD  1383               	bcf	3,7	;select IRP bank0
   352  07DE  30B0               	movlw	low (__pdataBANK1+16)
   353  07DF  00FD               	movwf	btemp+-1
   354  07E0  300F               	movlw	high __pidataBANK1
   355  07E1  00FE               	movwf	btemp
   356  07E2  30BE               	movlw	low __pidataBANK1
   357  07E3  00FF               	movwf	btemp+1
   358  07E4  30A0               	movlw	low __pdataBANK1
   359  07E5  0084               	movwf	4
   360  07E6  120A  158A  27F3  120A  118A  	fcall	init_ram0
   361                           
   362                           ; Initialize objects allocated to BANK0
   363  07EB  305E               	movlw	low (__pdataBANK0+16)
   364  07EC  00FD               	movwf	btemp+-1
   365  07ED  300F               	movlw	high __pidataBANK0
   366  07EE  00FE               	movwf	btemp
   367  07EF  30CE               	movlw	low __pidataBANK0
   368  07F0  00FF               	movwf	btemp+1
   369  07F1  304E               	movlw	low __pdataBANK0
   370  07F2  0084               	movwf	4
   371  07F3  120A  158A  27F3   	fcall	init_ram0
   372                           
   373                           ; Clear objects allocated to BANK0
   374  07F6  01DE               	clrf	__pbssBANK0& (0+127)
   375  07F7  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   376  07F8  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   377  07F9  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   378  07FA  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   379                           
   380                           ; Clear objects allocated to COMMON
   381  07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   382  07FC                     end_of_initialization:	
   383                           ;End of C runtime variable initialization code
   384                           
   385  07FC                     __end_of__initialization:	
   386  07FC  0183               	clrf	3
   387  07FD  120A  118A  2DEE   	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	bssCOMMON
   390  007D                     __pbssCOMMON:	
   391  007D                     _Time_out:	
   392  007D                     	ds	1
   393                           
   394                           	psect	bssBANK0
   395  005E                     __pbssBANK0:	
   396  005E                     _CheckSum:	
   397  005E                     	ds	1
   398  005F                     _RH_byte2:	
   399  005F                     	ds	1
   400  0060                     _RH_byte1:	
   401  0060                     	ds	1
   402  0061                     _T_byte2:	
   403  0061                     	ds	1
   404  0062                     _T_byte1:	
   405  0062                     	ds	1
   406                           
   407                           	psect	dataBANK0
   408  004E                     __pdataBANK0:	
   409  004E                     _message1:	
   410  004E                     	ds	16
   411                           
   412                           	psect	dataBANK1
   413  00A0                     __pdataBANK1:	
   414  00A0                     _message2:	
   415  00A0                     	ds	16
   416                           
   417                           	psect	inittext
   418  0FEF                     init_fetch0:	
   419                           ;	Called with low address in FSR and high address in W
   420                           
   421  0FEF  087E               	movf	126,w
   422  0FF0  008A               	movwf	10
   423  0FF1  087F               	movf	127,w
   424  0FF2  0082               	movwf	2
   425  0FF3                     init_ram0:	
   426                           ;Called with:
   427                           ;	high address of idata address in btemp 
   428                           ;	low address of idata address in btemp+1 
   429                           ;	low address of data in FSR
   430                           ;	high address + 1 of data in btemp-1
   431                           
   432  0FF3  27EF  120A  158A   	fcall	init_fetch0
   433  0FF6  0080               	movwf	0
   434  0FF7  0A84               	incf	4,f
   435  0FF8  0804               	movf	4,w
   436  0FF9  067D               	xorwf	125,w
   437  0FFA  1903               	btfsc	3,2
   438  0FFB  3400               	retlw	0
   439  0FFC  0AFF               	incf	127,f
   440  0FFD  1903               	btfsc	3,2
   441  0FFE  0AFE               	incf	126,f
   442  0FFF  2FF3               	goto	init_ram0
   443                           
   444                           	psect	cstackCOMMON
   445  0070                     __pcstackCOMMON:	
   446  0070                     ?___ftge:	
   447  0070                     ?_LCD_Clear:	
   448                           ; 1 bit 
   449                           
   450  0070                     ?_LCD_Init:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_start_signal:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??_start_signal:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_check_response:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ??_check_response:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_Read_Data:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ??_Read_Data:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_LCD_Command:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ??_LCD_Command:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_LCD_Char:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ??_LCD_Char:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?___awdiv:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?___awmod:	
   490                           ; 2 bytes @ 0x0
   491                           
   492  0070                     ?___ftpack:	
   493                           ; 2 bytes @ 0x0
   494                           
   495  0070                     ___awdiv@divisor:	
   496                           ; 3 bytes @ 0x0
   497                           
   498  0070                     ___awmod@divisor:	
   499                           ; 2 bytes @ 0x0
   500                           
   501  0070                     ___ftpack@arg:	
   502                           ; 2 bytes @ 0x0
   503                           
   504  0070                     ___ftge@ff1:	
   505                           ; 3 bytes @ 0x0
   506                           
   507                           
   508                           ; 3 bytes @ 0x0
   509  0070                     	ds	1
   510  0071                     LCD_Command@cmd:	
   511  0071                     LCD_Char@data:	
   512                           ; 1 bytes @ 0x1
   513                           
   514                           
   515                           ; 1 bytes @ 0x1
   516  0071                     	ds	1
   517  0072                     ??_LCD_Clear:	
   518  0072                     ?_LCD_SetCursor:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0072                     ?_LCD_String:	
   522                           ; 1 bytes @ 0x2
   523                           
   524  0072                     ??_LCD_Init:	
   525                           ; 1 bytes @ 0x2
   526                           
   527  0072                     Read_Data@_data:	
   528                           ; 1 bytes @ 0x2
   529                           
   530  0072                     LCD_SetCursor@col:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  0072                     LCD_String@str:	
   534                           ; 1 bytes @ 0x2
   535                           
   536  0072                     ___awdiv@dividend:	
   537                           ; 2 bytes @ 0x2
   538                           
   539  0072                     ___awmod@dividend:	
   540                           ; 2 bytes @ 0x2
   541                           
   542                           
   543                           ; 2 bytes @ 0x2
   544  0072                     	ds	1
   545  0073                     ??_LCD_SetCursor:	
   546  0073                     Read_Data@k:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0073                     ___ftpack@exp:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0073                     ___ftge@ff2:	
   553                           ; 1 bytes @ 0x3
   554                           
   555                           
   556                           ; 3 bytes @ 0x3
   557  0073                     	ds	1
   558  0074                     ??_LCD_String:	
   559  0074                     ??___awdiv:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     ??___awmod:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     Read_Data@i:	
   566                           ; 1 bytes @ 0x4
   567                           
   568  0074                     LCD_SetCursor@row:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0074                     ___ftpack@sign:	
   572                           ; 1 bytes @ 0x4
   573                           
   574                           
   575                           ; 1 bytes @ 0x4
   576  0074                     	ds	1
   577  0075                     ??___ftpack:	
   578  0075                     LCD_SetCursor@address:	
   579                           ; 1 bytes @ 0x5
   580                           
   581  0075                     ___awdiv@counter:	
   582                           ; 1 bytes @ 0x5
   583                           
   584  0075                     ___awmod@counter:	
   585                           ; 1 bytes @ 0x5
   586                           
   587                           
   588                           ; 1 bytes @ 0x5
   589  0075                     	ds	1
   590  0076                     ??___ftge:	
   591  0076                     ___awdiv@sign:	
   592                           ; 1 bytes @ 0x6
   593                           
   594  0076                     ___awmod@sign:	
   595                           ; 1 bytes @ 0x6
   596                           
   597                           
   598                           ; 1 bytes @ 0x6
   599  0076                     	ds	1
   600  0077                     ___awdiv@quotient:	
   601                           
   602                           ; 2 bytes @ 0x7
   603  0077                     	ds	1
   604  0078                     ?___lbtoft:	
   605                           
   606                           ; 3 bytes @ 0x8
   607  0078                     	ds	3
   608  007B                     ___lbtoft@c:	
   609                           
   610                           ; 1 bytes @ 0xB
   611  007B                     	ds	1
   612  007C                     ??_update_leds:	
   613                           
   614                           ; 1 bytes @ 0xC
   615  007C                     	ds	1
   616                           
   617                           	psect	cstackBANK0
   618  0020                     __pcstackBANK0:	
   619  0020                     ?_update_leds:	
   620  0020                     ??___lbtoft:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0020                     update_leds@temperature:	
   624                           ; 1 bytes @ 0x0
   625                           
   626                           
   627                           ; 3 bytes @ 0x0
   628  0020                     	ds	4
   629  0024                     ?___ftdiv:	
   630  0024                     ___ftdiv@f2:	
   631                           ; 3 bytes @ 0x4
   632                           
   633                           
   634                           ; 3 bytes @ 0x4
   635  0024                     	ds	3
   636  0027                     ___ftdiv@f1:	
   637                           
   638                           ; 3 bytes @ 0x7
   639  0027                     	ds	3
   640  002A                     ??___ftdiv:	
   641                           
   642                           ; 1 bytes @ 0xA
   643  002A                     	ds	4
   644  002E                     ___ftdiv@cntr:	
   645                           
   646                           ; 1 bytes @ 0xE
   647  002E                     	ds	1
   648  002F                     ___ftdiv@f3:	
   649                           
   650                           ; 3 bytes @ 0xF
   651  002F                     	ds	3
   652  0032                     ___ftdiv@exp:	
   653                           
   654                           ; 1 bytes @ 0x12
   655  0032                     	ds	1
   656  0033                     ___ftdiv@sign:	
   657                           
   658                           ; 1 bytes @ 0x13
   659  0033                     	ds	1
   660  0034                     ?___ftadd:	
   661  0034                     ___ftadd@f1:	
   662                           ; 3 bytes @ 0x14
   663                           
   664                           
   665                           ; 3 bytes @ 0x14
   666  0034                     	ds	3
   667  0037                     ___ftadd@f2:	
   668                           
   669                           ; 3 bytes @ 0x17
   670  0037                     	ds	3
   671  003A                     ??___ftadd:	
   672                           
   673                           ; 1 bytes @ 0x1A
   674  003A                     	ds	4
   675  003E                     ___ftadd@sign:	
   676                           
   677                           ; 1 bytes @ 0x1E
   678  003E                     	ds	1
   679  003F                     ___ftadd@exp2:	
   680                           
   681                           ; 1 bytes @ 0x1F
   682  003F                     	ds	1
   683  0040                     ___ftadd@exp1:	
   684                           
   685                           ; 1 bytes @ 0x20
   686  0040                     	ds	1
   687  0041                     ??_main:	
   688                           
   689                           ; 1 bytes @ 0x21
   690  0041                     	ds	10
   691  004B                     main@temperature:	
   692                           
   693                           ; 3 bytes @ 0x2B
   694  004B                     	ds	3
   695                           
   696                           	psect	maintext
   697  05EE                     __pmaintext:	
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 132 in file "newmain.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  temperature     3   43[BANK0 ] float 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : B00/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       3       0       0       0
   719 ;;      Temps:          0      10       0       0       0
   720 ;;      Totals:         0      13       0       0       0
   721 ;;Total ram usage:       13 bytes
   722 ;; Hardware stack levels required when called:    3
   723 ;; This function calls:
   724 ;;		_LCD_Clear
   725 ;;		_LCD_Init
   726 ;;		_LCD_SetCursor
   727 ;;		_LCD_String
   728 ;;		_Read_Data
   729 ;;		___awdiv
   730 ;;		___awmod
   731 ;;		___ftadd
   732 ;;		___ftdiv
   733 ;;		___lbtoft
   734 ;;		_check_response
   735 ;;		_start_signal
   736 ;;		_update_leds
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _main
   744  05EE                     _main:	
   745                           
   746                           ;newmain.c: 134: TRISD = 0x00;
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   750  05EE  1683               	bsf	3,5	;RP0=1, select bank1
   751  05EF  1303               	bcf	3,6	;RP1=0, select bank1
   752  05F0  0188               	clrf	8	;volatile
   753                           
   754                           ;newmain.c: 135: TRISC5 = 0;
   755  05F1  1287               	bcf	7,5	;volatile
   756                           
   757                           ;newmain.c: 136: TRISC6 = 0;
   758  05F2  1307               	bcf	7,6	;volatile
   759                           
   760                           ;newmain.c: 137: TRISC7 = 0;
   761  05F3  1387               	bcf	7,7	;volatile
   762                           
   763                           ;newmain.c: 138: TRISB4 = 1;
   764  05F4  1606               	bsf	6,4	;volatile
   765                           
   766                           ;newmain.c: 139: TRISC4 = 0;
   767  05F5  1207               	bcf	7,4	;volatile
   768                           
   769                           ;newmain.c: 142: RC5 = 0;
   770  05F6  1283               	bcf	3,5	;RP0=0, select bank0
   771  05F7  1303               	bcf	3,6	;RP1=0, select bank0
   772  05F8  1287               	bcf	7,5	;volatile
   773                           
   774                           ;newmain.c: 143: RC6 = 0;
   775  05F9  1307               	bcf	7,6	;volatile
   776                           
   777                           ;newmain.c: 144: RC7 = 0;
   778  05FA  1387               	bcf	7,7	;volatile
   779                           
   780                           ;newmain.c: 145: RC4 = 0;
   781  05FB  1207               	bcf	7,4	;volatile
   782                           
   783                           ;newmain.c: 148: LCD_Init();
   784  05FC  120A  118A  20D2  120A  118A  	fcall	_LCD_Init
   785                           
   786                           ;newmain.c: 149: LCD_Clear();
   787  0601  120A  158A  27AE  120A  118A  	fcall	_LCD_Clear
   788                           
   789                           ;newmain.c: 150: _delay((unsigned long)((1000)*(8000000/4000.0)));
   790  0606  300B               	movlw	11
   791  0607  1283               	bcf	3,5	;RP0=0, select bank0
   792  0608  1303               	bcf	3,6	;RP1=0, select bank0
   793  0609  00C3               	movwf	??_main+2
   794  060A  3026               	movlw	38
   795  060B  00C2               	movwf	??_main+1
   796  060C  305D               	movlw	93
   797  060D  00C1               	movwf	??_main
   798  060E                     u2457:	
   799  060E  0BC1               	decfsz	??_main,f
   800  060F  2E0E               	goto	u2457
   801  0610  0BC2               	decfsz	??_main+1,f
   802  0611  2E0E               	goto	u2457
   803  0612  0BC3               	decfsz	??_main+2,f
   804  0613  2E0E               	goto	u2457
   805  0614                     l1527:	
   806                           ;newmain.c: 153: while(1) {
   807                           
   808                           
   809                           ;newmain.c: 154: Time_out = 0;
   810  0614  01FD               	clrf	_Time_out
   811                           
   812                           ;newmain.c: 155: start_signal();
   813  0615  120A  118A  2078  120A  118A  	fcall	_start_signal
   814                           
   815                           ;newmain.c: 157: if(check_response()) {
   816  061A  120A  118A  205F  120A  118A  	fcall	_check_response
   817  061F  3A00               	xorlw	0
   818  0620  1903               	skipnz
   819  0621  2FA4               	goto	l1561
   820                           
   821                           ;newmain.c: 159: RH_byte1 = Read_Data();
   822  0622  120A  118A  2204  120A  118A  	fcall	_Read_Data
   823  0627  1283               	bcf	3,5	;RP0=0, select bank0
   824  0628  1303               	bcf	3,6	;RP1=0, select bank0
   825  0629  00C1               	movwf	??_main
   826  062A  0841               	movf	??_main,w
   827  062B  00E0               	movwf	_RH_byte1
   828                           
   829                           ;newmain.c: 160: RH_byte2 = Read_Data();
   830  062C  120A  118A  2204  120A  118A  	fcall	_Read_Data
   831  0631  1283               	bcf	3,5	;RP0=0, select bank0
   832  0632  1303               	bcf	3,6	;RP1=0, select bank0
   833  0633  00C1               	movwf	??_main
   834  0634  0841               	movf	??_main,w
   835  0635  00DF               	movwf	_RH_byte2
   836                           
   837                           ;newmain.c: 161: T_byte1 = Read_Data();
   838  0636  120A  118A  2204  120A  118A  	fcall	_Read_Data
   839  063B  1283               	bcf	3,5	;RP0=0, select bank0
   840  063C  1303               	bcf	3,6	;RP1=0, select bank0
   841  063D  00C1               	movwf	??_main
   842  063E  0841               	movf	??_main,w
   843  063F  00E2               	movwf	_T_byte1
   844                           
   845                           ;newmain.c: 162: T_byte2 = Read_Data();
   846  0640  120A  118A  2204  120A  118A  	fcall	_Read_Data
   847  0645  1283               	bcf	3,5	;RP0=0, select bank0
   848  0646  1303               	bcf	3,6	;RP1=0, select bank0
   849  0647  00C1               	movwf	??_main
   850  0648  0841               	movf	??_main,w
   851  0649  00E1               	movwf	_T_byte2
   852                           
   853                           ;newmain.c: 163: CheckSum = Read_Data();
   854  064A  120A  118A  2204  120A  118A  	fcall	_Read_Data
   855  064F  1283               	bcf	3,5	;RP0=0, select bank0
   856  0650  1303               	bcf	3,6	;RP1=0, select bank0
   857  0651  00C1               	movwf	??_main
   858  0652  0841               	movf	??_main,w
   859  0653  00DE               	movwf	_CheckSum
   860                           
   861                           ;newmain.c: 165: if(Time_out) {
   862  0654  087D               	movf	_Time_out,w
   863  0655  1903               	btfsc	3,2
   864  0656  2E6A               	goto	l1541
   865                           
   866                           ;newmain.c: 166: LCD_Clear();
   867  0657  120A  158A  27AE  120A  118A  	fcall	_LCD_Clear
   868                           
   869                           ;newmain.c: 167: LCD_SetCursor(0, 4);
   870  065C  3004               	movlw	4
   871  065D  1283               	bcf	3,5	;RP0=0, select bank0
   872  065E  1303               	bcf	3,6	;RP1=0, select bank0
   873  065F  00C1               	movwf	??_main
   874  0660  0841               	movf	??_main,w
   875  0661  00F2               	movwf	LCD_SetCursor@col
   876  0662  3000               	movlw	0
   877  0663  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
   878                           
   879                           ;newmain.c: 168: LCD_String("Time out!");
   880  0668  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   881  0669  2FC6               	goto	L1
   882  066A                     l1541:	
   883                           ;newmain.c: 169: }
   884                           
   885                           
   886                           ;newmain.c: 170: else {
   887                           ;newmain.c: 172: if(CheckSum == ((RH_byte1 + RH_byte2 + T_byte1 + T_byte2) & 0xFF)) {
   888  066A  1283               	bcf	3,5	;RP0=0, select bank0
   889  066B  1303               	bcf	3,6	;RP1=0, select bank0
   890  066C  0860               	movf	_RH_byte1,w
   891  066D  075F               	addwf	_RH_byte2,w
   892  066E  00C1               	movwf	??_main
   893  066F  01C2               	clrf	??_main+1
   894  0670  0DC2               	rlf	??_main+1,f
   895  0671  0862               	movf	_T_byte1,w
   896  0672  0741               	addwf	??_main,w
   897  0673  00C3               	movwf	??_main+2
   898  0674  3000               	movlw	0
   899  0675  1803               	skipnc
   900  0676  3001               	movlw	1
   901  0677  0742               	addwf	??_main+1,w
   902  0678  00C4               	movwf	??_main+3
   903  0679  0861               	movf	_T_byte2,w
   904  067A  0743               	addwf	??_main+2,w
   905  067B  00C5               	movwf	??_main+4
   906  067C  3000               	movlw	0
   907  067D  1803               	skipnc
   908  067E  3001               	movlw	1
   909  067F  0744               	addwf	??_main+3,w
   910  0680  00C6               	movwf	??_main+5
   911  0681  30FF               	movlw	255
   912  0682  0545               	andwf	??_main+4,w
   913  0683  00C7               	movwf	??_main+6
   914  0684  3000               	movlw	0
   915  0685  0546               	andwf	??_main+5,w
   916  0686  00C8               	movwf	??_main+7
   917  0687  085E               	movf	_CheckSum,w
   918  0688  00C9               	movwf	??_main+8
   919  0689  01CA               	clrf	??_main+9
   920  068A  0848               	movf	??_main+7,w
   921  068B  064A               	xorwf	??_main+9,w
   922  068C  1D03               	skipz
   923  068D  2E90               	goto	u2445
   924  068E  0847               	movf	??_main+6,w
   925  068F  0649               	xorwf	??_main+8,w
   926  0690                     u2445:	
   927  0690  1D03               	skipz
   928  0691  2F96               	goto	l1557
   929                           
   930                           ;newmain.c: 174: float temperature = T_byte1 + (T_byte2 / 10.0);
   931  0692  0861               	movf	_T_byte2,w
   932  0693  120A  118A  2093  120A  118A  	fcall	___lbtoft
   933  0698  0878               	movf	?___lbtoft,w
   934  0699  1283               	bcf	3,5	;RP0=0, select bank0
   935  069A  1303               	bcf	3,6	;RP1=0, select bank0
   936  069B  00A7               	movwf	___ftdiv@f1
   937  069C  0879               	movf	?___lbtoft+1,w
   938  069D  00A8               	movwf	___ftdiv@f1+1
   939  069E  087A               	movf	?___lbtoft+2,w
   940  069F  00A9               	movwf	___ftdiv@f1+2
   941  06A0  3000               	movlw	0
   942  06A1  00A4               	movwf	___ftdiv@f2
   943  06A2  3020               	movlw	32
   944  06A3  00A5               	movwf	___ftdiv@f2+1
   945  06A4  3041               	movlw	65
   946  06A5  00A6               	movwf	___ftdiv@f2+2
   947  06A6  120A  118A  242D  120A  118A  	fcall	___ftdiv
   948  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   949  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   950  06AD  0824               	movf	?___ftdiv,w
   951  06AE  00B4               	movwf	___ftadd@f1
   952  06AF  0825               	movf	?___ftdiv+1,w
   953  06B0  00B5               	movwf	___ftadd@f1+1
   954  06B1  0826               	movf	?___ftdiv+2,w
   955  06B2  00B6               	movwf	___ftadd@f1+2
   956  06B3  0862               	movf	_T_byte1,w
   957  06B4  120A  118A  2093  120A  118A  	fcall	___lbtoft
   958  06B9  0878               	movf	?___lbtoft,w
   959  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   960  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   961  06BC  00B7               	movwf	___ftadd@f2
   962  06BD  0879               	movf	?___lbtoft+1,w
   963  06BE  00B8               	movwf	___ftadd@f2+1
   964  06BF  087A               	movf	?___lbtoft+2,w
   965  06C0  00B9               	movwf	___ftadd@f2+2
   966  06C1  120A  118A  24E5  120A  118A  	fcall	___ftadd
   967  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   968  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   969  06C8  0834               	movf	?___ftadd,w
   970  06C9  00CB               	movwf	main@temperature
   971  06CA  0835               	movf	?___ftadd+1,w
   972  06CB  00CC               	movwf	main@temperature+1
   973  06CC  0836               	movf	?___ftadd+2,w
   974  06CD  00CD               	movwf	main@temperature+2
   975                           
   976                           ;newmain.c: 178: message1[7] = T_byte1/10 + 48;
   977  06CE  300A               	movlw	10
   978  06CF  00F0               	movwf	___awdiv@divisor
   979  06D0  3000               	movlw	0
   980  06D1  00F1               	movwf	___awdiv@divisor+1
   981  06D2  0862               	movf	_T_byte1,w
   982  06D3  00C1               	movwf	??_main
   983  06D4  01C2               	clrf	??_main+1
   984  06D5  0841               	movf	??_main,w
   985  06D6  00F2               	movwf	___awdiv@dividend
   986  06D7  0842               	movf	??_main+1,w
   987  06D8  00F3               	movwf	___awdiv@dividend+1
   988  06D9  120A  118A  214E  120A  118A  	fcall	___awdiv
   989  06DE  0870               	movf	?___awdiv,w
   990  06DF  3E30               	addlw	48
   991  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   992  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   993  06E2  00C3               	movwf	??_main+2
   994  06E3  0843               	movf	??_main+2,w
   995  06E4  00D5               	movwf	_message1+7
   996                           
   997                           ;newmain.c: 180: message1[8] = T_byte1%10 + 48;
   998  06E5  300A               	movlw	10
   999  06E6  00F0               	movwf	___awmod@divisor
  1000  06E7  3000               	movlw	0
  1001  06E8  00F1               	movwf	___awmod@divisor+1
  1002  06E9  0862               	movf	_T_byte1,w
  1003  06EA  00C1               	movwf	??_main
  1004  06EB  01C2               	clrf	??_main+1
  1005  06EC  0841               	movf	??_main,w
  1006  06ED  00F2               	movwf	___awmod@dividend
  1007  06EE  0842               	movf	??_main+1,w
  1008  06EF  00F3               	movwf	___awmod@dividend+1
  1009  06F0  120A  118A  2103  120A  118A  	fcall	___awmod
  1010  06F5  0870               	movf	?___awmod,w
  1011  06F6  3E30               	addlw	48
  1012  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1013  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1014  06F9  00C3               	movwf	??_main+2
  1015  06FA  0843               	movf	??_main+2,w
  1016  06FB  00D6               	movwf	_message1+8
  1017                           
  1018                           ;newmain.c: 182: message1[10] = T_byte2/10 + 48;
  1019  06FC  300A               	movlw	10
  1020  06FD  00F0               	movwf	___awdiv@divisor
  1021  06FE  3000               	movlw	0
  1022  06FF  00F1               	movwf	___awdiv@divisor+1
  1023  0700  0861               	movf	_T_byte2,w
  1024  0701  00C1               	movwf	??_main
  1025  0702  01C2               	clrf	??_main+1
  1026  0703  0841               	movf	??_main,w
  1027  0704  00F2               	movwf	___awdiv@dividend
  1028  0705  0842               	movf	??_main+1,w
  1029  0706  00F3               	movwf	___awdiv@dividend+1
  1030  0707  120A  118A  214E  120A  118A  	fcall	___awdiv
  1031  070C  0870               	movf	?___awdiv,w
  1032  070D  3E30               	addlw	48
  1033  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1034  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0710  00C3               	movwf	??_main+2
  1036  0711  0843               	movf	??_main+2,w
  1037  0712  00D8               	movwf	_message1+10
  1038                           
  1039                           ;newmain.c: 184: message2[7] = RH_byte1/10 + 48;
  1040  0713  300A               	movlw	10
  1041  0714  00F0               	movwf	___awdiv@divisor
  1042  0715  3000               	movlw	0
  1043  0716  00F1               	movwf	___awdiv@divisor+1
  1044  0717  0860               	movf	_RH_byte1,w
  1045  0718  00C1               	movwf	??_main
  1046  0719  01C2               	clrf	??_main+1
  1047  071A  0841               	movf	??_main,w
  1048  071B  00F2               	movwf	___awdiv@dividend
  1049  071C  0842               	movf	??_main+1,w
  1050  071D  00F3               	movwf	___awdiv@dividend+1
  1051  071E  120A  118A  214E  120A  118A  	fcall	___awdiv
  1052  0723  0870               	movf	?___awdiv,w
  1053  0724  3E30               	addlw	48
  1054  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0727  00C3               	movwf	??_main+2
  1057  0728  0843               	movf	??_main+2,w
  1058  0729  1683               	bsf	3,5	;RP0=1, select bank1
  1059  072A  1303               	bcf	3,6	;RP1=0, select bank1
  1060  072B  00A7               	movwf	(_message2^(0+128)+7)
  1061                           
  1062                           ;newmain.c: 186: message2[8] = RH_byte1%10 + 48;
  1063  072C  300A               	movlw	10
  1064  072D  00F0               	movwf	___awmod@divisor
  1065  072E  3000               	movlw	0
  1066  072F  00F1               	movwf	___awmod@divisor+1
  1067  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0732  0860               	movf	_RH_byte1,w
  1070  0733  00C1               	movwf	??_main
  1071  0734  01C2               	clrf	??_main+1
  1072  0735  0841               	movf	??_main,w
  1073  0736  00F2               	movwf	___awmod@dividend
  1074  0737  0842               	movf	??_main+1,w
  1075  0738  00F3               	movwf	___awmod@dividend+1
  1076  0739  120A  118A  2103  120A  118A  	fcall	___awmod
  1077  073E  0870               	movf	?___awmod,w
  1078  073F  3E30               	addlw	48
  1079  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0742  00C3               	movwf	??_main+2
  1082  0743  0843               	movf	??_main+2,w
  1083  0744  1683               	bsf	3,5	;RP0=1, select bank1
  1084  0745  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0746  00A8               	movwf	(_message2^(0+128)+8)
  1086                           
  1087                           ;newmain.c: 188: message2[10] = RH_byte2/10 + 48;
  1088  0747  300A               	movlw	10
  1089  0748  00F0               	movwf	___awdiv@divisor
  1090  0749  3000               	movlw	0
  1091  074A  00F1               	movwf	___awdiv@divisor+1
  1092  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1093  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1094  074D  085F               	movf	_RH_byte2,w
  1095  074E  00C1               	movwf	??_main
  1096  074F  01C2               	clrf	??_main+1
  1097  0750  0841               	movf	??_main,w
  1098  0751  00F2               	movwf	___awdiv@dividend
  1099  0752  0842               	movf	??_main+1,w
  1100  0753  00F3               	movwf	___awdiv@dividend+1
  1101  0754  120A  118A  214E  120A  118A  	fcall	___awdiv
  1102  0759  0870               	movf	?___awdiv,w
  1103  075A  3E30               	addlw	48
  1104  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1105  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1106  075D  00C3               	movwf	??_main+2
  1107  075E  0843               	movf	??_main+2,w
  1108  075F  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0760  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0761  00AA               	movwf	(_message2^(0+128)+10)
  1111                           
  1112                           ;newmain.c: 189: message1[11] = 223;
  1113  0762  30DF               	movlw	223
  1114  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0765  00C1               	movwf	??_main
  1117  0766  0841               	movf	??_main,w
  1118  0767  00D9               	movwf	_message1+11
  1119                           
  1120                           ;newmain.c: 192: LCD_SetCursor(0, 0);
  1121  0768  01F2               	clrf	LCD_SetCursor@col
  1122  0769  3000               	movlw	0
  1123  076A  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
  1124                           
  1125                           ;newmain.c: 193: LCD_String(message1);
  1126  076F  304E               	movlw	(low (_message1| 0))& (0+255)
  1127  0770  00F2               	movwf	LCD_String@str
  1128  0771  3000               	movlw	0
  1129  0772  00F3               	movwf	LCD_String@str+1
  1130  0773  120A  118A  20AF  120A  118A  	fcall	_LCD_String
  1131                           
  1132                           ;newmain.c: 194: LCD_SetCursor(1, 0);
  1133  0778  01F2               	clrf	LCD_SetCursor@col
  1134  0779  3001               	movlw	1
  1135  077A  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
  1136                           
  1137                           ;newmain.c: 195: LCD_String(message2);
  1138  077F  30A0               	movlw	(low (_message2| 0))& (0+255)
  1139  0780  00F2               	movwf	LCD_String@str
  1140  0781  3000               	movlw	0
  1141  0782  00F3               	movwf	LCD_String@str+1
  1142  0783  120A  118A  20AF  120A  118A  	fcall	_LCD_String
  1143                           
  1144                           ;newmain.c: 198: update_leds(temperature);
  1145  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1147  078A  084B               	movf	main@temperature,w
  1148  078B  00A0               	movwf	update_leds@temperature
  1149  078C  084C               	movf	main@temperature+1,w
  1150  078D  00A1               	movwf	update_leds@temperature+1
  1151  078E  084D               	movf	main@temperature+2,w
  1152  078F  00A2               	movwf	update_leds@temperature+2
  1153  0790  120A  118A  2395  120A  118A  	fcall	_update_leds
  1154                           
  1155                           ;newmain.c: 199: }
  1156  0795  2FCE               	goto	l1567
  1157  0796                     l1557:	
  1158                           
  1159                           ;newmain.c: 200: else {
  1160                           ;newmain.c: 202: LCD_Clear();
  1161  0796  120A  158A  27AE  120A  118A  	fcall	_LCD_Clear
  1162                           
  1163                           ;newmain.c: 203: LCD_SetCursor(0, 0);
  1164  079B  01F2               	clrf	LCD_SetCursor@col
  1165  079C  3000               	movlw	0
  1166  079D  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
  1167                           
  1168                           ;newmain.c: 204: LCD_String("Checksum Error!");
  1169  07A2  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1170  07A3  2FC6               	goto	L1
  1171  07A4                     l1561:	
  1172                           ;newmain.c: 205: }
  1173                           ;newmain.c: 206: }
  1174                           ;newmain.c: 207: }
  1175                           
  1176                           
  1177                           ;newmain.c: 208: else {
  1178                           ;newmain.c: 210: LCD_Clear();
  1179  07A4  120A  158A  27AE  120A  118A  	fcall	_LCD_Clear
  1180                           
  1181                           ;newmain.c: 211: LCD_SetCursor(0, 2);
  1182  07A9  3002               	movlw	2
  1183  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1184  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1185  07AC  00C1               	movwf	??_main
  1186  07AD  0841               	movf	??_main,w
  1187  07AE  00F2               	movwf	LCD_SetCursor@col
  1188  07AF  3000               	movlw	0
  1189  07B0  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
  1190                           
  1191                           ;newmain.c: 212: LCD_String("No response");
  1192  07B5  3021               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1193  07B6  00F2               	movwf	LCD_String@str
  1194  07B7  3080               	movlw	128
  1195  07B8  00F3               	movwf	LCD_String@str+1
  1196  07B9  120A  118A  20AF  120A  118A  	fcall	_LCD_String
  1197                           
  1198                           ;newmain.c: 213: LCD_SetCursor(1, 0);
  1199  07BE  01F2               	clrf	LCD_SetCursor@col
  1200  07BF  3001               	movlw	1
  1201  07C0  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
  1202                           
  1203                           ;newmain.c: 214: LCD_String("from the sensor");
  1204  07C5  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1205  07C6                     L1:	
  1206  07C6  00F2               	movwf	LCD_String@str
  1207  07C7  3080               	movlw	128
  1208  07C8  00F3               	movwf	LCD_String@str+1
  1209  07C9  120A  118A  20AF  120A  118A  	fcall	_LCD_String
  1210  07CE                     l1567:	
  1211                           
  1212                           ;newmain.c: 215: }
  1213                           ;newmain.c: 216: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1214  07CE  300B               	movlw	11
  1215  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1216  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1217  07D1  00C3               	movwf	??_main+2
  1218  07D2  3026               	movlw	38
  1219  07D3  00C2               	movwf	??_main+1
  1220  07D4  305D               	movlw	93
  1221  07D5  00C1               	movwf	??_main
  1222  07D6                     u2467:	
  1223  07D6  0BC1               	decfsz	??_main,f
  1224  07D7  2FD6               	goto	u2467
  1225  07D8  0BC2               	decfsz	??_main+1,f
  1226  07D9  2FD6               	goto	u2467
  1227  07DA  0BC3               	decfsz	??_main+2,f
  1228  07DB  2FD6               	goto	u2467
  1229  07DC  2E14               	goto	l1527
  1230  07DD                     __end_of_main:	
  1231                           
  1232                           	psect	text1
  1233  0395                     __ptext1:	
  1234 ;; *************** function _update_leds *****************
  1235 ;; Defined at:
  1236 ;;		line 101 in file "newmain.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  temperature     3    0[BANK0 ] float 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       3       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          1       0       0       0       0
  1253 ;;      Totals:         1       3       0       0       0
  1254 ;;Total ram usage:        4 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    2
  1257 ;; This function calls:
  1258 ;;		_LCD_Clear
  1259 ;;		_LCD_SetCursor
  1260 ;;		_LCD_String
  1261 ;;		___ftge
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _update_leds
  1269  0395                     _update_leds:	
  1270                           
  1271                           ;newmain.c: 103: RC5 = 0;
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in _update_leds: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1275  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0397  1287               	bcf	7,5	;volatile
  1278                           
  1279                           ;newmain.c: 104: RC6 = 0;
  1280  0398  1307               	bcf	7,6	;volatile
  1281                           
  1282                           ;newmain.c: 105: RC7 = 0;
  1283  0399  1387               	bcf	7,7	;volatile
  1284                           
  1285                           ;newmain.c: 106: RC4 = 0;
  1286  039A  1207               	bcf	7,4	;volatile
  1287                           
  1288                           ;newmain.c: 109: if (temperature > 25.0) {
  1289  039B  3000               	movlw	0
  1290  039C  00F0               	movwf	___ftge@ff1
  1291  039D  30C8               	movlw	200
  1292  039E  00F1               	movwf	___ftge@ff1+1
  1293  039F  3041               	movlw	65
  1294  03A0  00F2               	movwf	___ftge@ff1+2
  1295  03A1  0820               	movf	update_leds@temperature,w
  1296  03A2  00F3               	movwf	___ftge@ff2
  1297  03A3  0821               	movf	update_leds@temperature+1,w
  1298  03A4  00F4               	movwf	___ftge@ff2+1
  1299  03A5  0822               	movf	update_leds@temperature+2,w
  1300  03A6  00F5               	movwf	___ftge@ff2+2
  1301  03A7  120A  118A  21A7  120A  118A  	fcall	___ftge
  1302  03AC  1803               	btfsc	3,0
  1303  03AD  2BCA               	goto	l1275
  1304                           
  1305                           ;newmain.c: 110: RC5 = 1;
  1306  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1307  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1308  03B0  1687               	bsf	7,5	;volatile
  1309                           
  1310                           ;newmain.c: 111: LCD_Clear();
  1311  03B1  120A  158A  27AE  120A  118A  	fcall	_LCD_Clear
  1312                           
  1313                           ;newmain.c: 112: LCD_SetCursor(0,4);
  1314  03B6  3004               	movlw	4
  1315  03B7  00FC               	movwf	??_update_leds
  1316  03B8  087C               	movf	??_update_leds,w
  1317  03B9  00F2               	movwf	LCD_SetCursor@col
  1318  03BA  3000               	movlw	0
  1319  03BB  120A  158A  27DE  120A  118A  	fcall	_LCD_SetCursor
  1320                           
  1321                           ;newmain.c: 113: LCD_String("Warning");
  1322  03C0  3037               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1323  03C1  00F2               	movwf	LCD_String@str
  1324  03C2  3080               	movlw	128
  1325  03C3  00F3               	movwf	LCD_String@str+1
  1326  03C4  120A  118A  20AF  120A  118A  	fcall	_LCD_String
  1327                           
  1328                           ;newmain.c: 114: }
  1329  03C9  2C10               	goto	l1285
  1330  03CA                     l1275:	
  1331                           
  1332                           ;newmain.c: 115: else if (temperature >= 20.0 && temperature <= 25.0) {
  1333  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1334  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1335  03CC  0820               	movf	update_leds@temperature,w
  1336  03CD  00F0               	movwf	___ftge@ff1
  1337  03CE  0821               	movf	update_leds@temperature+1,w
  1338  03CF  00F1               	movwf	___ftge@ff1+1
  1339  03D0  0822               	movf	update_leds@temperature+2,w
  1340  03D1  00F2               	movwf	___ftge@ff1+2
  1341  03D2  3000               	movlw	0
  1342  03D3  00F3               	movwf	___ftge@ff2
  1343  03D4  30A0               	movlw	160
  1344  03D5  00F4               	movwf	___ftge@ff2+1
  1345  03D6  3041               	movlw	65
  1346  03D7  00F5               	movwf	___ftge@ff2+2
  1347  03D8  120A  118A  21A7  120A  118A  	fcall	___ftge
  1348  03DD  1C03               	btfss	3,0
  1349  03DE  2BF8               	goto	l1281
  1350  03DF  3000               	movlw	0
  1351  03E0  00F0               	movwf	___ftge@ff1
  1352  03E1  30C8               	movlw	200
  1353  03E2  00F1               	movwf	___ftge@ff1+1
  1354  03E3  3041               	movlw	65
  1355  03E4  00F2               	movwf	___ftge@ff1+2
  1356  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1357  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1358  03E7  0820               	movf	update_leds@temperature,w
  1359  03E8  00F3               	movwf	___ftge@ff2
  1360  03E9  0821               	movf	update_leds@temperature+1,w
  1361  03EA  00F4               	movwf	___ftge@ff2+1
  1362  03EB  0822               	movf	update_leds@temperature+2,w
  1363  03EC  00F5               	movwf	___ftge@ff2+2
  1364  03ED  120A  118A  21A7  120A  118A  	fcall	___ftge
  1365  03F2  1C03               	btfss	3,0
  1366  03F3  2BF8               	goto	l1281
  1367                           
  1368                           ;newmain.c: 116: RC6 = 1;
  1369  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1370  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1371  03F6  1707               	bsf	7,6	;volatile
  1372                           
  1373                           ;newmain.c: 117: }
  1374  03F7  2C10               	goto	l1285
  1375  03F8                     l1281:	
  1376                           
  1377                           ;newmain.c: 118: else if(temperature < 20.0) {
  1378  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1379  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1380  03FA  0820               	movf	update_leds@temperature,w
  1381  03FB  00F0               	movwf	___ftge@ff1
  1382  03FC  0821               	movf	update_leds@temperature+1,w
  1383  03FD  00F1               	movwf	___ftge@ff1+1
  1384  03FE  0822               	movf	update_leds@temperature+2,w
  1385  03FF  00F2               	movwf	___ftge@ff1+2
  1386  0400  3000               	movlw	0
  1387  0401  00F3               	movwf	___ftge@ff2
  1388  0402  30A0               	movlw	160
  1389  0403  00F4               	movwf	___ftge@ff2+1
  1390  0404  3041               	movlw	65
  1391  0405  00F5               	movwf	___ftge@ff2+2
  1392  0406  120A  118A  21A7  120A  118A  	fcall	___ftge
  1393  040B  1803               	btfsc	3,0
  1394  040C  2C10               	goto	l1285
  1395                           
  1396                           ;newmain.c: 119: RC7 = 1;
  1397  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1398  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1399  040F  1787               	bsf	7,7	;volatile
  1400  0410                     l1285:	
  1401                           
  1402                           ;newmain.c: 120: }
  1403                           ;newmain.c: 123: if(temperature > 25.0) {
  1404  0410  3000               	movlw	0
  1405  0411  00F0               	movwf	___ftge@ff1
  1406  0412  30C8               	movlw	200
  1407  0413  00F1               	movwf	___ftge@ff1+1
  1408  0414  3041               	movlw	65
  1409  0415  00F2               	movwf	___ftge@ff1+2
  1410  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0418  0820               	movf	update_leds@temperature,w
  1413  0419  00F3               	movwf	___ftge@ff2
  1414  041A  0821               	movf	update_leds@temperature+1,w
  1415  041B  00F4               	movwf	___ftge@ff2+1
  1416  041C  0822               	movf	update_leds@temperature+2,w
  1417  041D  00F5               	movwf	___ftge@ff2+2
  1418  041E  120A  118A  21A7  120A  118A  	fcall	___ftge
  1419  0423  1803               	btfsc	3,0
  1420  0424  2C29               	goto	l80
  1421                           
  1422                           ;newmain.c: 124: RC4 = 1;
  1423  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0427  1607               	bsf	7,4	;volatile
  1426                           
  1427                           ;newmain.c: 125: }
  1428  0428  0008               	return
  1429  0429                     l80:	
  1430                           
  1431                           ;newmain.c: 126: else {
  1432                           ;newmain.c: 127: RC4 = 0;
  1433  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1434  042A  1303               	bcf	3,6	;RP1=0, select bank0
  1435  042B  1207               	bcf	7,4	;volatile
  1436  042C  0008               	return
  1437  042D                     __end_of_update_leds:	
  1438                           
  1439                           	psect	text2
  1440  01A7                     __ptext2:	
  1441 ;; *************** function ___ftge *****************
  1442 ;; Defined at:
  1443 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  ff1             3    0[COMMON] float 
  1446 ;;  ff2             3    3[COMMON] float 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;		None               void
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         6       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          6       0       0       0       0
  1461 ;;      Totals:        12       0       0       0       0
  1462 ;;Total ram usage:       12 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_update_leds
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function ___ftge
  1473  01A7                     ___ftge:	
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1477  01A7  1FF2               	btfss	___ftge@ff1+2,7
  1478  01A8  29CE               	goto	l1181
  1479  01A9  3000               	movlw	0
  1480  01AA  00F6               	movwf	??___ftge
  1481  01AB  3000               	movlw	0
  1482  01AC  00F7               	movwf	??___ftge+1
  1483  01AD  3080               	movlw	128
  1484  01AE  00F8               	movwf	??___ftge+2
  1485  01AF  0970               	comf	___ftge@ff1,w
  1486  01B0  00F9               	movwf	??___ftge+3
  1487  01B1  0971               	comf	___ftge@ff1+1,w
  1488  01B2  00FA               	movwf	??___ftge+4
  1489  01B3  0972               	comf	___ftge@ff1+2,w
  1490  01B4  00FB               	movwf	??___ftge+5
  1491  01B5  0AF9               	incf	??___ftge+3,f
  1492  01B6  1903               	skipnz
  1493  01B7  0AFA               	incf	??___ftge+4,f
  1494  01B8  1903               	skipnz
  1495  01B9  0AFB               	incf	??___ftge+5,f
  1496  01BA  0879               	movf	??___ftge+3,w
  1497  01BB  07F6               	addwf	??___ftge,f
  1498  01BC  087A               	movf	??___ftge+4,w
  1499  01BD  1803               	skipnc
  1500  01BE  0F7A               	incfsz	??___ftge+4,w
  1501  01BF  29C1               	goto	u1701
  1502  01C0  29C2               	goto	u1702
  1503  01C1                     u1701:	
  1504  01C1  07F7               	addwf	??___ftge+1,f
  1505  01C2                     u1702:	
  1506  01C2  087B               	movf	??___ftge+5,w
  1507  01C3  1803               	skipnc
  1508  01C4  0F7B               	incfsz	??___ftge+5,w
  1509  01C5  29C7               	goto	u1703
  1510  01C6  29C8               	goto	u1704
  1511  01C7                     u1703:	
  1512  01C7  07F8               	addwf	??___ftge+2,f
  1513  01C8                     u1704:	
  1514  01C8  0876               	movf	??___ftge,w
  1515  01C9  00F0               	movwf	___ftge@ff1
  1516  01CA  0877               	movf	??___ftge+1,w
  1517  01CB  00F1               	movwf	___ftge@ff1+1
  1518  01CC  0878               	movf	??___ftge+2,w
  1519  01CD  00F2               	movwf	___ftge@ff1+2
  1520  01CE                     l1181:	
  1521  01CE  1FF5               	btfss	___ftge@ff2+2,7
  1522  01CF  29F5               	goto	l1185
  1523  01D0  3000               	movlw	0
  1524  01D1  00F6               	movwf	??___ftge
  1525  01D2  3000               	movlw	0
  1526  01D3  00F7               	movwf	??___ftge+1
  1527  01D4  3080               	movlw	128
  1528  01D5  00F8               	movwf	??___ftge+2
  1529  01D6  0973               	comf	___ftge@ff2,w
  1530  01D7  00F9               	movwf	??___ftge+3
  1531  01D8  0974               	comf	___ftge@ff2+1,w
  1532  01D9  00FA               	movwf	??___ftge+4
  1533  01DA  0975               	comf	___ftge@ff2+2,w
  1534  01DB  00FB               	movwf	??___ftge+5
  1535  01DC  0AF9               	incf	??___ftge+3,f
  1536  01DD  1903               	skipnz
  1537  01DE  0AFA               	incf	??___ftge+4,f
  1538  01DF  1903               	skipnz
  1539  01E0  0AFB               	incf	??___ftge+5,f
  1540  01E1  0879               	movf	??___ftge+3,w
  1541  01E2  07F6               	addwf	??___ftge,f
  1542  01E3  087A               	movf	??___ftge+4,w
  1543  01E4  1803               	skipnc
  1544  01E5  0F7A               	incfsz	??___ftge+4,w
  1545  01E6  29E8               	goto	u1721
  1546  01E7  29E9               	goto	u1722
  1547  01E8                     u1721:	
  1548  01E8  07F7               	addwf	??___ftge+1,f
  1549  01E9                     u1722:	
  1550  01E9  087B               	movf	??___ftge+5,w
  1551  01EA  1803               	skipnc
  1552  01EB  0F7B               	incfsz	??___ftge+5,w
  1553  01EC  29EE               	goto	u1723
  1554  01ED  29EF               	goto	u1724
  1555  01EE                     u1723:	
  1556  01EE  07F8               	addwf	??___ftge+2,f
  1557  01EF                     u1724:	
  1558  01EF  0876               	movf	??___ftge,w
  1559  01F0  00F3               	movwf	___ftge@ff2
  1560  01F1  0877               	movf	??___ftge+1,w
  1561  01F2  00F4               	movwf	___ftge@ff2+1
  1562  01F3  0878               	movf	??___ftge+2,w
  1563  01F4  00F5               	movwf	___ftge@ff2+2
  1564  01F5                     l1185:	
  1565  01F5  3080               	movlw	128
  1566  01F6  06F2               	xorwf	___ftge@ff1+2,f
  1567  01F7  3080               	movlw	128
  1568  01F8  06F5               	xorwf	___ftge@ff2+2,f
  1569  01F9  0875               	movf	___ftge@ff2+2,w
  1570  01FA  0272               	subwf	___ftge@ff1+2,w
  1571  01FB  1D03               	skipz
  1572  01FC  0008               	return
  1573  01FD  0874               	movf	___ftge@ff2+1,w
  1574  01FE  0271               	subwf	___ftge@ff1+1,w
  1575  01FF  1D03               	skipz
  1576  0200  0008               	return
  1577  0201  0873               	movf	___ftge@ff2,w
  1578  0202  0270               	subwf	___ftge@ff1,w
  1579  0203  0008               	return
  1580  0204                     __end_of___ftge:	
  1581                           
  1582                           	psect	text3
  1583  00AF                     __ptext3:	
  1584 ;; *************** function _LCD_String *****************
  1585 ;; Defined at:
  1586 ;;		line 63 in file "lcd.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  str             2    2[COMMON] PTR const unsigned char 
  1589 ;;		 -> STR_5(16), STR_4(12), STR_3(16), message2(16), 
  1590 ;;		 -> message1(16), STR_2(10), STR_1(8), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         2       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0
  1605 ;;      Totals:         2       0       0       0       0
  1606 ;;Total ram usage:        2 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    1
  1609 ;; This function calls:
  1610 ;;		_LCD_Char
  1611 ;; This function is called by:
  1612 ;;		_update_leds
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _LCD_String
  1619  00AF                     _LCD_String:	
  1620  00AF                     l1143:	
  1621                           ;lcd.c: 64: while (*str) {
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1625                           
  1626  00AF  0873               	movf	LCD_String@str+1,w
  1627  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1628  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1629  00B2  00FF               	movwf	127
  1630  00B3  0872               	movf	LCD_String@str,w
  1631  00B4  0084               	movwf	4
  1632  00B5  120A  118A  2003  120A  118A  	fcall	stringtab
  1633  00BA  3A00               	xorlw	0
  1634  00BB  1903               	btfsc	3,2
  1635  00BC  0008               	return
  1636                           
  1637                           ;lcd.c: 65: LCD_Char(*str++);
  1638  00BD  0873               	movf	LCD_String@str+1,w
  1639  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1640  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1641  00C0  00FF               	movwf	127
  1642  00C1  0872               	movf	LCD_String@str,w
  1643  00C2  0084               	movwf	4
  1644  00C3  120A  118A  2003  120A  118A  	fcall	stringtab
  1645  00C8  120A  118A  22C7  120A  118A  	fcall	_LCD_Char
  1646  00CD  3001               	movlw	1
  1647  00CE  07F2               	addwf	LCD_String@str,f
  1648  00CF  1803               	skipnc
  1649  00D0  0AF3               	incf	LCD_String@str+1,f
  1650  00D1  28AF               	goto	l1143
  1651  00D2                     __end_of_LCD_String:	
  1652                           
  1653                           	psect	text4
  1654  02C7                     __ptext4:	
  1655 ;; *************** function _LCD_Char *****************
  1656 ;; Defined at:
  1657 ;;		line 35 in file "lcd.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  data            1    wreg     unsigned char 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  data            1    1[COMMON] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         0       0       0       0       0
  1672 ;;      Locals:         1       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0
  1674 ;;      Totals:         2       0       0       0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_LCD_String
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _LCD_Char
  1686  02C7                     _LCD_Char:	
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _LCD_Char: [wreg]
  1690                           ;LCD_Char@data stored from wreg
  1691  02C7  00F1               	movwf	LCD_Char@data
  1692                           
  1693                           ;lcd.c: 36: RD0 = 1;
  1694  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1695  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1696  02CA  1408               	bsf	8,0	;volatile
  1697                           
  1698                           ;lcd.c: 37: RD1 = 0;
  1699  02CB  1088               	bcf	8,1	;volatile
  1700                           
  1701                           ;lcd.c: 40: RD6 = (data & 0x80) ? 1 : 0;
  1702  02CC  1FF1               	btfss	LCD_Char@data,7
  1703  02CD  2AD2               	goto	u1390
  1704  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1705  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1706  02D0  1708               	bsf	8,6	;volatile
  1707  02D1  2AD5               	goto	u1404
  1708  02D2                     u1390:	
  1709  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1710  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1711  02D4  1308               	bcf	8,6	;volatile
  1712  02D5                     u1404:	
  1713                           
  1714                           ;lcd.c: 41: RD5 = (data & 0x40) ? 1 : 0;
  1715  02D5  1F71               	btfss	LCD_Char@data,6
  1716  02D6  2ADB               	goto	u1410
  1717  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1718  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1719  02D9  1688               	bsf	8,5	;volatile
  1720  02DA  2ADE               	goto	u1424
  1721  02DB                     u1410:	
  1722  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1723  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1724  02DD  1288               	bcf	8,5	;volatile
  1725  02DE                     u1424:	
  1726                           
  1727                           ;lcd.c: 42: RD4 = (data & 0x20) ? 1 : 0;
  1728  02DE  1EF1               	btfss	LCD_Char@data,5
  1729  02DF  2AE4               	goto	u1430
  1730  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1731  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1732  02E2  1608               	bsf	8,4	;volatile
  1733  02E3  2AE7               	goto	u1444
  1734  02E4                     u1430:	
  1735  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1736  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1737  02E6  1208               	bcf	8,4	;volatile
  1738  02E7                     u1444:	
  1739                           
  1740                           ;lcd.c: 43: RD3 = (data & 0x10) ? 1 : 0;
  1741  02E7  1E71               	btfss	LCD_Char@data,4
  1742  02E8  2AED               	goto	u1450
  1743  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1744  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1745  02EB  1588               	bsf	8,3	;volatile
  1746  02EC  2AF0               	goto	u1464
  1747  02ED                     u1450:	
  1748  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1749  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1750  02EF  1188               	bcf	8,3	;volatile
  1751  02F0                     u1464:	
  1752                           
  1753                           ;lcd.c: 45: RD2 = 1;
  1754  02F0  1508               	bsf	8,2	;volatile
  1755                           
  1756                           ;lcd.c: 46: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1757  02F1  2AF2               	nop2	;2 cycle nop
  1758                           
  1759                           ;lcd.c: 47: RD2 = 0;
  1760  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1761  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1762  02F4  1108               	bcf	8,2	;volatile
  1763                           
  1764                           ;lcd.c: 48: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1765  02F5  3042               	movlw	66
  1766  02F6  00F0               	movwf	??_LCD_Char
  1767  02F7                     u2477:	
  1768  02F7  0BF0               	decfsz	??_LCD_Char,f
  1769  02F8  2AF7               	goto	u2477
  1770  02F9  0000               	nop
  1771                           
  1772                           ;lcd.c: 51: RD6 = (data & 0x08) ? 1 : 0;
  1773  02FA  1DF1               	btfss	LCD_Char@data,3
  1774  02FB  2B00               	goto	u1470
  1775  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1776  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1777  02FE  1708               	bsf	8,6	;volatile
  1778  02FF  2B03               	goto	l1113
  1779  0300                     u1470:	
  1780  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0302  1308               	bcf	8,6	;volatile
  1783  0303                     l1113:	
  1784                           
  1785                           ;lcd.c: 52: RD5 = (data & 0x04) ? 1 : 0;
  1786  0303  1D71               	btfss	LCD_Char@data,2
  1787  0304  2B09               	goto	u1490
  1788  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0307  1688               	bsf	8,5	;volatile
  1791  0308  2B0C               	goto	l1115
  1792  0309                     u1490:	
  1793  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1794  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1795  030B  1288               	bcf	8,5	;volatile
  1796  030C                     l1115:	
  1797                           
  1798                           ;lcd.c: 53: RD4 = (data & 0x02) ? 1 : 0;
  1799  030C  1CF1               	btfss	LCD_Char@data,1
  1800  030D  2B12               	goto	u1510
  1801  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1802  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0310  1608               	bsf	8,4	;volatile
  1804  0311  2B15               	goto	l1117
  1805  0312                     u1510:	
  1806  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0314  1208               	bcf	8,4	;volatile
  1809  0315                     l1117:	
  1810                           
  1811                           ;lcd.c: 54: RD3 = (data & 0x01) ? 1 : 0;
  1812  0315  1C71               	btfss	LCD_Char@data,0
  1813  0316  2B1B               	goto	u1530
  1814  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0319  1588               	bsf	8,3	;volatile
  1817  031A  2B1E               	goto	l1119
  1818  031B                     u1530:	
  1819  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1820  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1821  031D  1188               	bcf	8,3	;volatile
  1822  031E                     l1119:	
  1823                           
  1824                           ;lcd.c: 56: RD2 = 1;
  1825  031E  1508               	bsf	8,2	;volatile
  1826                           
  1827                           ;lcd.c: 57: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1828  031F  2B20               	nop2	;2 cycle nop
  1829                           
  1830                           ;lcd.c: 58: RD2 = 0;
  1831  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0322  1108               	bcf	8,2	;volatile
  1834                           
  1835                           ;lcd.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1836  0323  3042               	movlw	66
  1837  0324  00F0               	movwf	??_LCD_Char
  1838  0325                     u2487:	
  1839  0325  0BF0               	decfsz	??_LCD_Char,f
  1840  0326  2B25               	goto	u2487
  1841  0327  0000               	nop
  1842  0328  0008               	return
  1843  0329                     __end_of_LCD_Char:	
  1844                           
  1845                           	psect	text5
  1846  0FDE                     __ptext5:	
  1847 ;; *************** function _LCD_SetCursor *****************
  1848 ;; Defined at:
  1849 ;;		line 83 in file "lcd.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  row             1    wreg     unsigned char 
  1852 ;;  col             1    2[COMMON] unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  row             1    4[COMMON] unsigned char 
  1855 ;;  address         1    5[COMMON] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0, pclath, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1865 ;;      Params:         1       0       0       0       0
  1866 ;;      Locals:         2       0       0       0       0
  1867 ;;      Temps:          1       0       0       0       0
  1868 ;;      Totals:         4       0       0       0       0
  1869 ;;Total ram usage:        4 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    1
  1872 ;; This function calls:
  1873 ;;		_LCD_Command
  1874 ;; This function is called by:
  1875 ;;		_update_leds
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _LCD_SetCursor
  1882  0FDE                     _LCD_SetCursor:	
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _LCD_SetCursor: [wreg+status,2+status,0+pclath+cstack]
  1886                           ;LCD_SetCursor@row stored from wreg
  1887  0FDE  00F4               	movwf	LCD_SetCursor@row
  1888                           
  1889                           ;lcd.c: 84: uint8_t address;
  1890                           ;lcd.c: 85: if (row == 0)
  1891  0FDF  0874               	movf	LCD_SetCursor@row,w
  1892  0FE0  1D03               	btfss	3,2
  1893  0FE1  2FE5               	goto	l1133
  1894                           
  1895                           ;lcd.c: 86: address = 0x80 + col;
  1896  0FE2  0872               	movf	LCD_SetCursor@col,w
  1897  0FE3  3E80               	addlw	128
  1898  0FE4  2FE7               	goto	L3
  1899  0FE5                     l1133:	
  1900                           
  1901                           ;lcd.c: 87: else
  1902                           ;lcd.c: 88: address = 0xC0 + col;
  1903  0FE5  0872               	movf	LCD_SetCursor@col,w
  1904  0FE6  3EC0               	addlw	192
  1905  0FE7                     L3:	
  1906  0FE7  00F3               	movwf	??_LCD_SetCursor
  1907  0FE8  0873               	movf	??_LCD_SetCursor,w
  1908  0FE9  00F5               	movwf	LCD_SetCursor@address
  1909                           
  1910                           ;lcd.c: 89: LCD_Command(address);
  1911  0FEA  0875               	movf	LCD_SetCursor@address,w
  1912  0FEB  120A  118A  2265   	fcall	_LCD_Command
  1913  0FEE  0008               	return
  1914  0FEF                     __end_of_LCD_SetCursor:	
  1915                           
  1916                           	psect	text6
  1917  0FAE                     __ptext6:	
  1918 ;; *************** function _LCD_Clear *****************
  1919 ;; Defined at:
  1920 ;;		line 93 in file "lcd.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          2       0       0       0       0
  1937 ;;      Totals:         2       0       0       0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    1
  1941 ;; This function calls:
  1942 ;;		_LCD_Command
  1943 ;; This function is called by:
  1944 ;;		_update_leds
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _LCD_Clear
  1951  0FAE                     _LCD_Clear:	
  1952                           
  1953                           ;lcd.c: 94: LCD_Command(0x01);
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1957  0FAE  3001               	movlw	1
  1958  0FAF  120A  118A  2265  120A  158A  	fcall	_LCD_Command
  1959                           
  1960                           ;lcd.c: 95: _delay((unsigned long)((2)*(8000000/4000.0)));
  1961  0FB4  3006               	movlw	6
  1962  0FB5  00F3               	movwf	??_LCD_Clear+1
  1963  0FB6  3030               	movlw	48
  1964  0FB7  00F2               	movwf	??_LCD_Clear
  1965  0FB8                     u2497:	
  1966  0FB8  0BF2               	decfsz	??_LCD_Clear,f
  1967  0FB9  2FB8               	goto	u2497
  1968  0FBA  0BF3               	decfsz	??_LCD_Clear+1,f
  1969  0FBB  2FB8               	goto	u2497
  1970  0FBC  0000               	nop
  1971  0FBD  0008               	return
  1972  0FBE                     __end_of_LCD_Clear:	
  1973                           
  1974                           	psect	text7
  1975  0078                     __ptext7:	
  1976 ;; *************** function _start_signal *****************
  1977 ;; Defined at:
  1978 ;;		line 43 in file "newmain.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          2       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _start_signal
  2007  0078                     _start_signal:	
  2008                           
  2009                           ;newmain.c: 44: TRISB4 = 0;
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _start_signal: [wreg]
  2013  0078  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0079  1303               	bcf	3,6	;RP1=0, select bank1
  2015  007A  1206               	bcf	6,4	;volatile
  2016                           
  2017                           ;newmain.c: 45: RB4 = 0;
  2018  007B  1283               	bcf	3,5	;RP0=0, select bank0
  2019  007C  1303               	bcf	3,6	;RP1=0, select bank0
  2020  007D  1206               	bcf	6,4	;volatile
  2021                           
  2022                           ;newmain.c: 46: _delay((unsigned long)((25)*(8000000/4000.0)));
  2023  007E  3041               	movlw	65
  2024  007F  00F1               	movwf	??_start_signal+1
  2025  0080  30EE               	movlw	238
  2026  0081  00F0               	movwf	??_start_signal
  2027  0082                     u2507:	
  2028  0082  0BF0               	decfsz	??_start_signal,f
  2029  0083  2882               	goto	u2507
  2030  0084  0BF1               	decfsz	??_start_signal+1,f
  2031  0085  2882               	goto	u2507
  2032  0086  0000               	nop
  2033                           
  2034                           ;newmain.c: 47: RB4 = 1;
  2035  0087  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0088  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0089  1606               	bsf	6,4	;volatile
  2038                           
  2039                           ;newmain.c: 48: _delay((unsigned long)((30)*(8000000/4000000.0)));
  2040  008A  3013               	movlw	19
  2041  008B  00F0               	movwf	??_start_signal
  2042  008C                     u2517:	
  2043  008C  0BF0               	decfsz	??_start_signal,f
  2044  008D  288C               	goto	u2517
  2045  008E  288F               	nop2
  2046                           
  2047                           ;newmain.c: 49: TRISB4 = 1;
  2048  008F  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0090  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0091  1606               	bsf	6,4	;volatile
  2051  0092  0008               	return
  2052  0093                     __end_of_start_signal:	
  2053                           
  2054                           	psect	text8
  2055  005F                     __ptext8:	
  2056 ;; *************** function _check_response *****************
  2057 ;; Defined at:
  2058 ;;		line 53 in file "newmain.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      unsigned char 
  2065 ;; Registers used:
  2066 ;;		wreg
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0
  2074 ;;      Temps:          1       0       0       0       0
  2075 ;;      Totals:         1       0       0       0       0
  2076 ;;Total ram usage:        1 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _check_response
  2087  005F                     _check_response:	
  2088                           
  2089                           ;newmain.c: 54: _delay((unsigned long)((40)*(8000000/4000000.0)));
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _check_response: [wreg]
  2093  005F  301A               	movlw	26
  2094  0060  00F0               	movwf	??_check_response
  2095  0061                     u2527:	
  2096  0061  0BF0               	decfsz	??_check_response,f
  2097  0062  2861               	goto	u2527
  2098  0063  0000               	nop
  2099                           
  2100                           ;newmain.c: 55: if(!RB4) {
  2101  0064  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0065  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0066  1A06               	btfsc	6,4	;volatile
  2104  0067  2876               	goto	l1217
  2105                           
  2106                           ;newmain.c: 56: _delay((unsigned long)((80)*(8000000/4000000.0)));
  2107  0068  3035               	movlw	53
  2108  0069  00F0               	movwf	??_check_response
  2109  006A                     u2537:	
  2110  006A  0BF0               	decfsz	??_check_response,f
  2111  006B  286A               	goto	u2537
  2112                           
  2113                           ;newmain.c: 57: if(RB4) {
  2114  006C  1283               	bcf	3,5	;RP0=0, select bank0
  2115  006D  1303               	bcf	3,6	;RP1=0, select bank0
  2116  006E  1E06               	btfss	6,4	;volatile
  2117  006F  2876               	goto	l1217
  2118                           
  2119                           ;newmain.c: 58: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2120  0070  3021               	movlw	33
  2121  0071  00F0               	movwf	??_check_response
  2122  0072                     u2547:	
  2123  0072  0BF0               	decfsz	??_check_response,f
  2124  0073  2872               	goto	u2547
  2125                           
  2126                           ;newmain.c: 59: return 1;
  2127  0074  3001               	movlw	1
  2128  0075  0008               	return
  2129  0076                     l1217:	
  2130                           
  2131                           ;newmain.c: 60: }
  2132                           ;newmain.c: 61: }
  2133                           ;newmain.c: 62: return 0;
  2134  0076  3000               	movlw	0
  2135  0077  0008               	return
  2136  0078                     __end_of_check_response:	
  2137                           
  2138                           	psect	text9
  2139  0093                     __ptext9:	
  2140 ;; *************** function ___lbtoft *****************
  2141 ;; Defined at:
  2142 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbtoft.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  c               1    wreg     unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  c               1   11[COMMON] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  3    8[COMMON] float 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         3       0       0       0       0
  2157 ;;      Locals:         1       0       0       0       0
  2158 ;;      Temps:          0       4       0       0       0
  2159 ;;      Totals:         4       4       0       0       0
  2160 ;;Total ram usage:        8 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    1
  2163 ;; This function calls:
  2164 ;;		___ftpack
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function ___lbtoft
  2172  0093                     ___lbtoft:	
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  2176                           ;___lbtoft@c stored from wreg
  2177  0093  00FB               	movwf	___lbtoft@c
  2178  0094  087B               	movf	___lbtoft@c,w
  2179  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0097  00A0               	movwf	??___lbtoft
  2182  0098  01A1               	clrf	??___lbtoft+1
  2183  0099  01A2               	clrf	??___lbtoft+2
  2184  009A  0820               	movf	??___lbtoft,w
  2185  009B  00F0               	movwf	___ftpack@arg
  2186  009C  0821               	movf	??___lbtoft+1,w
  2187  009D  00F1               	movwf	___ftpack@arg+1
  2188  009E  0822               	movf	??___lbtoft+2,w
  2189  009F  00F2               	movwf	___ftpack@arg+2
  2190  00A0  308E               	movlw	142
  2191  00A1  00A3               	movwf	??___lbtoft+3
  2192  00A2  0823               	movf	??___lbtoft+3,w
  2193  00A3  00F3               	movwf	___ftpack@exp
  2194  00A4  01F4               	clrf	___ftpack@sign
  2195  00A5  120A  118A  2329   	fcall	___ftpack
  2196  00A8  0870               	movf	?___ftpack,w
  2197  00A9  00F8               	movwf	?___lbtoft
  2198  00AA  0871               	movf	?___ftpack+1,w
  2199  00AB  00F9               	movwf	?___lbtoft+1
  2200  00AC  0872               	movf	?___ftpack+2,w
  2201  00AD  00FA               	movwf	?___lbtoft+2
  2202  00AE  0008               	return
  2203  00AF                     __end_of___lbtoft:	
  2204                           
  2205                           	psect	text10
  2206  042D                     __ptext10:	
  2207 ;; *************** function ___ftdiv *****************
  2208 ;; Defined at:
  2209 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  f2              3    4[BANK0 ] float 
  2212 ;;  f1              3    7[BANK0 ] float 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  f3              3   15[BANK0 ] float 
  2215 ;;  sign            1   19[BANK0 ] unsigned char 
  2216 ;;  exp             1   18[BANK0 ] unsigned char 
  2217 ;;  cntr            1   14[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  3    4[BANK0 ] float 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       6       0       0       0
  2228 ;;      Locals:         0       6       0       0       0
  2229 ;;      Temps:          0       4       0       0       0
  2230 ;;      Totals:         0      16       0       0       0
  2231 ;;Total ram usage:       16 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    1
  2234 ;; This function calls:
  2235 ;;		___ftpack
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function ___ftdiv
  2243  042D                     ___ftdiv:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2247  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2248  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2249  042F  0827               	movf	___ftdiv@f1,w
  2250  0430  00AA               	movwf	??___ftdiv
  2251  0431  0828               	movf	___ftdiv@f1+1,w
  2252  0432  00AB               	movwf	??___ftdiv+1
  2253  0433  0829               	movf	___ftdiv@f1+2,w
  2254  0434  00AC               	movwf	??___ftdiv+2
  2255  0435  1003               	clrc
  2256  0436  0D2B               	rlf	??___ftdiv+1,w
  2257  0437  0D2C               	rlf	??___ftdiv+2,w
  2258  0438  00AD               	movwf	??___ftdiv+3
  2259  0439  082D               	movf	??___ftdiv+3,w
  2260  043A  00B2               	movwf	___ftdiv@exp
  2261  043B  0832               	movf	___ftdiv@exp,w
  2262  043C  1D03               	btfss	3,2
  2263  043D  2C45               	goto	l1461
  2264  043E  3000               	movlw	0
  2265  043F  00A4               	movwf	?___ftdiv
  2266  0440  3000               	movlw	0
  2267  0441  00A5               	movwf	?___ftdiv+1
  2268  0442  3000               	movlw	0
  2269  0443  00A6               	movwf	?___ftdiv+2
  2270  0444  0008               	return
  2271  0445                     l1461:	
  2272  0445  0824               	movf	___ftdiv@f2,w
  2273  0446  00AA               	movwf	??___ftdiv
  2274  0447  0825               	movf	___ftdiv@f2+1,w
  2275  0448  00AB               	movwf	??___ftdiv+1
  2276  0449  0826               	movf	___ftdiv@f2+2,w
  2277  044A  00AC               	movwf	??___ftdiv+2
  2278  044B  1003               	clrc
  2279  044C  0D2B               	rlf	??___ftdiv+1,w
  2280  044D  0D2C               	rlf	??___ftdiv+2,w
  2281  044E  00AD               	movwf	??___ftdiv+3
  2282  044F  082D               	movf	??___ftdiv+3,w
  2283  0450  00B3               	movwf	___ftdiv@sign
  2284  0451  0833               	movf	___ftdiv@sign,w
  2285  0452  1D03               	btfss	3,2
  2286  0453  2C5B               	goto	l1467
  2287  0454  3000               	movlw	0
  2288  0455  00A4               	movwf	?___ftdiv
  2289  0456  3000               	movlw	0
  2290  0457  00A5               	movwf	?___ftdiv+1
  2291  0458  3000               	movlw	0
  2292  0459  00A6               	movwf	?___ftdiv+2
  2293  045A  0008               	return
  2294  045B                     l1467:	
  2295  045B  3000               	movlw	0
  2296  045C  00AF               	movwf	___ftdiv@f3
  2297  045D  3000               	movlw	0
  2298  045E  00B0               	movwf	___ftdiv@f3+1
  2299  045F  3000               	movlw	0
  2300  0460  00B1               	movwf	___ftdiv@f3+2
  2301  0461  3089               	movlw	137
  2302  0462  0733               	addwf	___ftdiv@sign,w
  2303  0463  00AA               	movwf	??___ftdiv
  2304  0464  082A               	movf	??___ftdiv,w
  2305  0465  02B2               	subwf	___ftdiv@exp,f
  2306  0466  0827               	movf	___ftdiv@f1,w
  2307  0467  00AA               	movwf	??___ftdiv
  2308  0468  0828               	movf	___ftdiv@f1+1,w
  2309  0469  00AB               	movwf	??___ftdiv+1
  2310  046A  0829               	movf	___ftdiv@f1+2,w
  2311  046B  00AC               	movwf	??___ftdiv+2
  2312  046C  3010               	movlw	16
  2313  046D                     u2365:	
  2314  046D  1003               	clrc
  2315  046E  0CAC               	rrf	??___ftdiv+2,f
  2316  046F  0CAB               	rrf	??___ftdiv+1,f
  2317  0470  0CAA               	rrf	??___ftdiv,f
  2318  0471  3EFF               	addlw	-1
  2319  0472  1D03               	skipz
  2320  0473  2C6D               	goto	u2365
  2321  0474  082A               	movf	??___ftdiv,w
  2322  0475  00AD               	movwf	??___ftdiv+3
  2323  0476  082D               	movf	??___ftdiv+3,w
  2324  0477  00B3               	movwf	___ftdiv@sign
  2325  0478  0824               	movf	___ftdiv@f2,w
  2326  0479  00AA               	movwf	??___ftdiv
  2327  047A  0825               	movf	___ftdiv@f2+1,w
  2328  047B  00AB               	movwf	??___ftdiv+1
  2329  047C  0826               	movf	___ftdiv@f2+2,w
  2330  047D  00AC               	movwf	??___ftdiv+2
  2331  047E  3010               	movlw	16
  2332  047F                     u2375:	
  2333  047F  1003               	clrc
  2334  0480  0CAC               	rrf	??___ftdiv+2,f
  2335  0481  0CAB               	rrf	??___ftdiv+1,f
  2336  0482  0CAA               	rrf	??___ftdiv,f
  2337  0483  3EFF               	addlw	-1
  2338  0484  1D03               	skipz
  2339  0485  2C7F               	goto	u2375
  2340  0486  082A               	movf	??___ftdiv,w
  2341  0487  00AD               	movwf	??___ftdiv+3
  2342  0488  082D               	movf	??___ftdiv+3,w
  2343  0489  06B3               	xorwf	___ftdiv@sign,f
  2344  048A  3080               	movlw	128
  2345  048B  00AA               	movwf	??___ftdiv
  2346  048C  082A               	movf	??___ftdiv,w
  2347  048D  05B3               	andwf	___ftdiv@sign,f
  2348  048E  17A8               	bsf	___ftdiv@f1+1,7
  2349  048F  30FF               	movlw	255
  2350  0490  05A7               	andwf	___ftdiv@f1,f
  2351  0491  30FF               	movlw	255
  2352  0492  05A8               	andwf	___ftdiv@f1+1,f
  2353  0493  3000               	movlw	0
  2354  0494  05A9               	andwf	___ftdiv@f1+2,f
  2355  0495  17A5               	bsf	___ftdiv@f2+1,7
  2356  0496  30FF               	movlw	255
  2357  0497  05A4               	andwf	___ftdiv@f2,f
  2358  0498  30FF               	movlw	255
  2359  0499  05A5               	andwf	___ftdiv@f2+1,f
  2360  049A  3000               	movlw	0
  2361  049B  05A6               	andwf	___ftdiv@f2+2,f
  2362  049C  3018               	movlw	24
  2363  049D  00AA               	movwf	??___ftdiv
  2364  049E  082A               	movf	??___ftdiv,w
  2365  049F  00AE               	movwf	___ftdiv@cntr
  2366  04A0                     l1481:	
  2367  04A0  3001               	movlw	1
  2368  04A1                     u2385:	
  2369  04A1  1003               	clrc
  2370  04A2  0DAF               	rlf	___ftdiv@f3,f
  2371  04A3  0DB0               	rlf	___ftdiv@f3+1,f
  2372  04A4  0DB1               	rlf	___ftdiv@f3+2,f
  2373  04A5  3EFF               	addlw	-1
  2374  04A6  1D03               	skipz
  2375  04A7  2CA1               	goto	u2385
  2376  04A8  0826               	movf	___ftdiv@f2+2,w
  2377  04A9  0229               	subwf	___ftdiv@f1+2,w
  2378  04AA  1D03               	skipz
  2379  04AB  2CB2               	goto	u2395
  2380  04AC  0825               	movf	___ftdiv@f2+1,w
  2381  04AD  0228               	subwf	___ftdiv@f1+1,w
  2382  04AE  1D03               	skipz
  2383  04AF  2CB2               	goto	u2395
  2384  04B0  0824               	movf	___ftdiv@f2,w
  2385  04B1  0227               	subwf	___ftdiv@f1,w
  2386  04B2                     u2395:	
  2387  04B2  1C03               	skipc
  2388  04B3  2CBF               	goto	l1489
  2389  04B4  0824               	movf	___ftdiv@f2,w
  2390  04B5  02A7               	subwf	___ftdiv@f1,f
  2391  04B6  0825               	movf	___ftdiv@f2+1,w
  2392  04B7  1C03               	skipc
  2393  04B8  0F25               	incfsz	___ftdiv@f2+1,w
  2394  04B9  02A8               	subwf	___ftdiv@f1+1,f
  2395  04BA  0826               	movf	___ftdiv@f2+2,w
  2396  04BB  1C03               	skipc
  2397  04BC  0A26               	incf	___ftdiv@f2+2,w
  2398  04BD  02A9               	subwf	___ftdiv@f1+2,f
  2399  04BE  142F               	bsf	___ftdiv@f3,0
  2400  04BF                     l1489:	
  2401  04BF  3001               	movlw	1
  2402  04C0                     u2405:	
  2403  04C0  1003               	clrc
  2404  04C1  0DA7               	rlf	___ftdiv@f1,f
  2405  04C2  0DA8               	rlf	___ftdiv@f1+1,f
  2406  04C3  0DA9               	rlf	___ftdiv@f1+2,f
  2407  04C4  3EFF               	addlw	-1
  2408  04C5  1D03               	skipz
  2409  04C6  2CC0               	goto	u2405
  2410  04C7  3001               	movlw	1
  2411  04C8  02AE               	subwf	___ftdiv@cntr,f
  2412  04C9  1D03               	btfss	3,2
  2413  04CA  2CA0               	goto	l1481
  2414  04CB  082F               	movf	___ftdiv@f3,w
  2415  04CC  00F0               	movwf	___ftpack@arg
  2416  04CD  0830               	movf	___ftdiv@f3+1,w
  2417  04CE  00F1               	movwf	___ftpack@arg+1
  2418  04CF  0831               	movf	___ftdiv@f3+2,w
  2419  04D0  00F2               	movwf	___ftpack@arg+2
  2420  04D1  0832               	movf	___ftdiv@exp,w
  2421  04D2  00AA               	movwf	??___ftdiv
  2422  04D3  082A               	movf	??___ftdiv,w
  2423  04D4  00F3               	movwf	___ftpack@exp
  2424  04D5  0833               	movf	___ftdiv@sign,w
  2425  04D6  00AB               	movwf	??___ftdiv+1
  2426  04D7  082B               	movf	??___ftdiv+1,w
  2427  04D8  00F4               	movwf	___ftpack@sign
  2428  04D9  120A  118A  2329   	fcall	___ftpack
  2429  04DC  0870               	movf	?___ftpack,w
  2430  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2431  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2432  04DF  00A4               	movwf	?___ftdiv
  2433  04E0  0871               	movf	?___ftpack+1,w
  2434  04E1  00A5               	movwf	?___ftdiv+1
  2435  04E2  0872               	movf	?___ftpack+2,w
  2436  04E3  00A6               	movwf	?___ftdiv+2
  2437  04E4  0008               	return
  2438  04E5                     __end_of___ftdiv:	
  2439                           
  2440                           	psect	text11
  2441  04E5                     __ptext11:	
  2442 ;; *************** function ___ftadd *****************
  2443 ;; Defined at:
  2444 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  f1              3   20[BANK0 ] float 
  2447 ;;  f2              3   23[BANK0 ] float 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  exp1            1   32[BANK0 ] unsigned char 
  2450 ;;  exp2            1   31[BANK0 ] unsigned char 
  2451 ;;  sign            1   30[BANK0 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  3   20[BANK0 ] float 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       6       0       0       0
  2462 ;;      Locals:         0       3       0       0       0
  2463 ;;      Temps:          0       4       0       0       0
  2464 ;;      Totals:         0      13       0       0       0
  2465 ;;Total ram usage:       13 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    1
  2468 ;; This function calls:
  2469 ;;		___ftpack
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function ___ftadd
  2477  04E5                     ___ftadd:	
  2478                           
  2479                           ;incstack = 0
  2480                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2481  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2482  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2483  04E7  0834               	movf	___ftadd@f1,w
  2484  04E8  00BA               	movwf	??___ftadd
  2485  04E9  0835               	movf	___ftadd@f1+1,w
  2486  04EA  00BB               	movwf	??___ftadd+1
  2487  04EB  0836               	movf	___ftadd@f1+2,w
  2488  04EC  00BC               	movwf	??___ftadd+2
  2489  04ED  1003               	clrc
  2490  04EE  0D3B               	rlf	??___ftadd+1,w
  2491  04EF  0D3C               	rlf	??___ftadd+2,w
  2492  04F0  00BD               	movwf	??___ftadd+3
  2493  04F1  083D               	movf	??___ftadd+3,w
  2494  04F2  00C0               	movwf	___ftadd@exp1
  2495  04F3  0837               	movf	___ftadd@f2,w
  2496  04F4  00BA               	movwf	??___ftadd
  2497  04F5  0838               	movf	___ftadd@f2+1,w
  2498  04F6  00BB               	movwf	??___ftadd+1
  2499  04F7  0839               	movf	___ftadd@f2+2,w
  2500  04F8  00BC               	movwf	??___ftadd+2
  2501  04F9  1003               	clrc
  2502  04FA  0D3B               	rlf	??___ftadd+1,w
  2503  04FB  0D3C               	rlf	??___ftadd+2,w
  2504  04FC  00BD               	movwf	??___ftadd+3
  2505  04FD  083D               	movf	??___ftadd+3,w
  2506  04FE  00BF               	movwf	___ftadd@exp2
  2507  04FF  0840               	movf	___ftadd@exp1,w
  2508  0500  1903               	btfsc	3,2
  2509  0501  2D0E               	goto	l1391
  2510  0502  083F               	movf	___ftadd@exp2,w
  2511  0503  0240               	subwf	___ftadd@exp1,w
  2512  0504  1803               	skipnc
  2513  0505  2D15               	goto	l1395
  2514  0506  0340               	decf	___ftadd@exp1,w
  2515  0507  3AFF               	xorlw	255
  2516  0508  073F               	addwf	___ftadd@exp2,w
  2517  0509  00BA               	movwf	??___ftadd
  2518  050A  3019               	movlw	25
  2519  050B  023A               	subwf	??___ftadd,w
  2520  050C  1C03               	skipc
  2521  050D  2D15               	goto	l1395
  2522  050E                     l1391:	
  2523  050E  0837               	movf	___ftadd@f2,w
  2524  050F  00B4               	movwf	?___ftadd
  2525  0510  0838               	movf	___ftadd@f2+1,w
  2526  0511  00B5               	movwf	?___ftadd+1
  2527  0512  0839               	movf	___ftadd@f2+2,w
  2528  0513  00B6               	movwf	?___ftadd+2
  2529  0514  0008               	return
  2530  0515                     l1395:	
  2531  0515  083F               	movf	___ftadd@exp2,w
  2532  0516  1903               	btfsc	3,2
  2533  0517  0008               	return
  2534  0518  0840               	movf	___ftadd@exp1,w
  2535  0519  023F               	subwf	___ftadd@exp2,w
  2536  051A  1803               	skipnc
  2537  051B  2D24               	goto	l1401
  2538  051C  033F               	decf	___ftadd@exp2,w
  2539  051D  3AFF               	xorlw	255
  2540  051E  0740               	addwf	___ftadd@exp1,w
  2541  051F  00BA               	movwf	??___ftadd
  2542  0520  3019               	movlw	25
  2543  0521  023A               	subwf	??___ftadd,w
  2544  0522  1803               	btfsc	3,0
  2545  0523  0008               	return
  2546  0524                     l1401:	
  2547  0524  3006               	movlw	6
  2548  0525  00BA               	movwf	??___ftadd
  2549  0526  083A               	movf	??___ftadd,w
  2550  0527  00BE               	movwf	___ftadd@sign
  2551  0528  1BB6               	btfsc	___ftadd@f1+2,7
  2552  0529  17BE               	bsf	___ftadd@sign,7
  2553  052A  1BB9               	btfsc	___ftadd@f2+2,7
  2554  052B  173E               	bsf	___ftadd@sign,6
  2555  052C  17B5               	bsf	___ftadd@f1+1,7
  2556  052D  30FF               	movlw	255
  2557  052E  05B4               	andwf	___ftadd@f1,f
  2558  052F  30FF               	movlw	255
  2559  0530  05B5               	andwf	___ftadd@f1+1,f
  2560  0531  3000               	movlw	0
  2561  0532  05B6               	andwf	___ftadd@f1+2,f
  2562  0533  17B8               	bsf	___ftadd@f2+1,7
  2563  0534  30FF               	movlw	255
  2564  0535  05B7               	andwf	___ftadd@f2,f
  2565  0536  30FF               	movlw	255
  2566  0537  05B8               	andwf	___ftadd@f2+1,f
  2567  0538  3000               	movlw	0
  2568  0539  05B9               	andwf	___ftadd@f2+2,f
  2569  053A  083F               	movf	___ftadd@exp2,w
  2570  053B  0240               	subwf	___ftadd@exp1,w
  2571  053C  1803               	skipnc
  2572  053D  2D64               	goto	l1423
  2573  053E                     l1413:	
  2574  053E  3001               	movlw	1
  2575  053F                     u2195:	
  2576  053F  1003               	clrc
  2577  0540  0DB7               	rlf	___ftadd@f2,f
  2578  0541  0DB8               	rlf	___ftadd@f2+1,f
  2579  0542  0DB9               	rlf	___ftadd@f2+2,f
  2580  0543  3EFF               	addlw	-1
  2581  0544  1D03               	skipz
  2582  0545  2D3F               	goto	u2195
  2583  0546  3001               	movlw	1
  2584  0547  02BF               	subwf	___ftadd@exp2,f
  2585  0548  083F               	movf	___ftadd@exp2,w
  2586  0549  0640               	xorwf	___ftadd@exp1,w
  2587  054A  1903               	skipnz
  2588  054B  2D5F               	goto	l1421
  2589  054C  3001               	movlw	1
  2590  054D  02BE               	subwf	___ftadd@sign,f
  2591  054E  083E               	movf	___ftadd@sign,w
  2592  054F  3907               	andlw	7
  2593  0550  1903               	btfsc	3,2
  2594  0551  2D5F               	goto	l1421
  2595  0552  2D3E               	goto	l1413
  2596  0553                     l1419:	
  2597  0553  3001               	movlw	1
  2598  0554                     u2225:	
  2599  0554  1003               	clrc
  2600  0555  0CB6               	rrf	___ftadd@f1+2,f
  2601  0556  0CB5               	rrf	___ftadd@f1+1,f
  2602  0557  0CB4               	rrf	___ftadd@f1,f
  2603  0558  3EFF               	addlw	-1
  2604  0559  1D03               	skipz
  2605  055A  2D54               	goto	u2225
  2606  055B  3001               	movlw	1
  2607  055C  00BA               	movwf	??___ftadd
  2608  055D  083A               	movf	??___ftadd,w
  2609  055E  07C0               	addwf	___ftadd@exp1,f
  2610  055F                     l1421:	
  2611  055F  0840               	movf	___ftadd@exp1,w
  2612  0560  063F               	xorwf	___ftadd@exp2,w
  2613  0561  1903               	btfsc	3,2
  2614  0562  2D8D               	goto	l409
  2615  0563  2D53               	goto	l1419
  2616  0564                     l1423:	
  2617  0564  0840               	movf	___ftadd@exp1,w
  2618  0565  023F               	subwf	___ftadd@exp2,w
  2619  0566  1803               	skipnc
  2620  0567  2D8D               	goto	l409
  2621  0568                     l1425:	
  2622  0568  3001               	movlw	1
  2623  0569                     u2255:	
  2624  0569  1003               	clrc
  2625  056A  0DB4               	rlf	___ftadd@f1,f
  2626  056B  0DB5               	rlf	___ftadd@f1+1,f
  2627  056C  0DB6               	rlf	___ftadd@f1+2,f
  2628  056D  3EFF               	addlw	-1
  2629  056E  1D03               	skipz
  2630  056F  2D69               	goto	u2255
  2631  0570  3001               	movlw	1
  2632  0571  02C0               	subwf	___ftadd@exp1,f
  2633  0572  083F               	movf	___ftadd@exp2,w
  2634  0573  0640               	xorwf	___ftadd@exp1,w
  2635  0574  1903               	skipnz
  2636  0575  2D89               	goto	l1433
  2637  0576  3001               	movlw	1
  2638  0577  02BE               	subwf	___ftadd@sign,f
  2639  0578  083E               	movf	___ftadd@sign,w
  2640  0579  3907               	andlw	7
  2641  057A  1903               	btfsc	3,2
  2642  057B  2D89               	goto	l1433
  2643  057C  2D68               	goto	l1425
  2644  057D                     l1431:	
  2645  057D  3001               	movlw	1
  2646  057E                     u2285:	
  2647  057E  1003               	clrc
  2648  057F  0CB9               	rrf	___ftadd@f2+2,f
  2649  0580  0CB8               	rrf	___ftadd@f2+1,f
  2650  0581  0CB7               	rrf	___ftadd@f2,f
  2651  0582  3EFF               	addlw	-1
  2652  0583  1D03               	skipz
  2653  0584  2D7E               	goto	u2285
  2654  0585  3001               	movlw	1
  2655  0586  00BA               	movwf	??___ftadd
  2656  0587  083A               	movf	??___ftadd,w
  2657  0588  07BF               	addwf	___ftadd@exp2,f
  2658  0589                     l1433:	
  2659  0589  0840               	movf	___ftadd@exp1,w
  2660  058A  063F               	xorwf	___ftadd@exp2,w
  2661  058B  1D03               	skipz
  2662  058C  2D7D               	goto	l1431
  2663  058D                     l409:	
  2664  058D  1FBE               	btfss	___ftadd@sign,7
  2665  058E  2D9F               	goto	l1437
  2666  058F  30FF               	movlw	255
  2667  0590  06B4               	xorwf	___ftadd@f1,f
  2668  0591  30FF               	movlw	255
  2669  0592  06B5               	xorwf	___ftadd@f1+1,f
  2670  0593  30FF               	movlw	255
  2671  0594  06B6               	xorwf	___ftadd@f1+2,f
  2672  0595  3001               	movlw	1
  2673  0596  07B4               	addwf	___ftadd@f1,f
  2674  0597  3000               	movlw	0
  2675  0598  1803               	skipnc
  2676  0599  3001               	movlw	1
  2677  059A  07B5               	addwf	___ftadd@f1+1,f
  2678  059B  3000               	movlw	0
  2679  059C  1803               	skipnc
  2680  059D  3001               	movlw	1
  2681  059E  07B6               	addwf	___ftadd@f1+2,f
  2682  059F                     l1437:	
  2683  059F  1F3E               	btfss	___ftadd@sign,6
  2684  05A0  2DB1               	goto	l1441
  2685  05A1  30FF               	movlw	255
  2686  05A2  06B7               	xorwf	___ftadd@f2,f
  2687  05A3  30FF               	movlw	255
  2688  05A4  06B8               	xorwf	___ftadd@f2+1,f
  2689  05A5  30FF               	movlw	255
  2690  05A6  06B9               	xorwf	___ftadd@f2+2,f
  2691  05A7  3001               	movlw	1
  2692  05A8  07B7               	addwf	___ftadd@f2,f
  2693  05A9  3000               	movlw	0
  2694  05AA  1803               	skipnc
  2695  05AB  3001               	movlw	1
  2696  05AC  07B8               	addwf	___ftadd@f2+1,f
  2697  05AD  3000               	movlw	0
  2698  05AE  1803               	skipnc
  2699  05AF  3001               	movlw	1
  2700  05B0  07B9               	addwf	___ftadd@f2+2,f
  2701  05B1                     l1441:	
  2702  05B1  01BE               	clrf	___ftadd@sign
  2703  05B2  0834               	movf	___ftadd@f1,w
  2704  05B3  07B7               	addwf	___ftadd@f2,f
  2705  05B4  0835               	movf	___ftadd@f1+1,w
  2706  05B5  1103               	clrz
  2707  05B6  1803               	skipnc
  2708  05B7  0A35               	incf	___ftadd@f1+1,w
  2709  05B8  1D03               	btfss	3,2
  2710  05B9  07B8               	addwf	___ftadd@f2+1,f
  2711  05BA  0836               	movf	___ftadd@f1+2,w
  2712  05BB  1103               	clrz
  2713  05BC  1803               	skipnc
  2714  05BD  0A36               	incf	___ftadd@f1+2,w
  2715  05BE  1D03               	btfss	3,2
  2716  05BF  07B9               	addwf	___ftadd@f2+2,f
  2717  05C0  1FB9               	btfss	___ftadd@f2+2,7
  2718  05C1  2DD4               	goto	l1451
  2719  05C2  30FF               	movlw	255
  2720  05C3  06B7               	xorwf	___ftadd@f2,f
  2721  05C4  30FF               	movlw	255
  2722  05C5  06B8               	xorwf	___ftadd@f2+1,f
  2723  05C6  30FF               	movlw	255
  2724  05C7  06B9               	xorwf	___ftadd@f2+2,f
  2725  05C8  3001               	movlw	1
  2726  05C9  07B7               	addwf	___ftadd@f2,f
  2727  05CA  3000               	movlw	0
  2728  05CB  1803               	skipnc
  2729  05CC  3001               	movlw	1
  2730  05CD  07B8               	addwf	___ftadd@f2+1,f
  2731  05CE  3000               	movlw	0
  2732  05CF  1803               	skipnc
  2733  05D0  3001               	movlw	1
  2734  05D1  07B9               	addwf	___ftadd@f2+2,f
  2735  05D2  01BE               	clrf	___ftadd@sign
  2736  05D3  0ABE               	incf	___ftadd@sign,f
  2737  05D4                     l1451:	
  2738  05D4  0837               	movf	___ftadd@f2,w
  2739  05D5  00F0               	movwf	___ftpack@arg
  2740  05D6  0838               	movf	___ftadd@f2+1,w
  2741  05D7  00F1               	movwf	___ftpack@arg+1
  2742  05D8  0839               	movf	___ftadd@f2+2,w
  2743  05D9  00F2               	movwf	___ftpack@arg+2
  2744  05DA  0840               	movf	___ftadd@exp1,w
  2745  05DB  00BA               	movwf	??___ftadd
  2746  05DC  083A               	movf	??___ftadd,w
  2747  05DD  00F3               	movwf	___ftpack@exp
  2748  05DE  083E               	movf	___ftadd@sign,w
  2749  05DF  00BB               	movwf	??___ftadd+1
  2750  05E0  083B               	movf	??___ftadd+1,w
  2751  05E1  00F4               	movwf	___ftpack@sign
  2752  05E2  120A  118A  2329   	fcall	___ftpack
  2753  05E5  0870               	movf	?___ftpack,w
  2754  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2755  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2756  05E8  00B4               	movwf	?___ftadd
  2757  05E9  0871               	movf	?___ftpack+1,w
  2758  05EA  00B5               	movwf	?___ftadd+1
  2759  05EB  0872               	movf	?___ftpack+2,w
  2760  05EC  00B6               	movwf	?___ftadd+2
  2761  05ED  0008               	return
  2762  05EE                     __end_of___ftadd:	
  2763                           
  2764                           	psect	text12
  2765  0329                     __ptext12:	
  2766 ;; *************** function ___ftpack *****************
  2767 ;; Defined at:
  2768 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  arg             3    0[COMMON] unsigned um
  2771 ;;  exp             1    3[COMMON] unsigned char 
  2772 ;;  sign            1    4[COMMON] unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  3    0[COMMON] float 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         5       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          3       0       0       0       0
  2787 ;;      Totals:         8       0       0       0       0
  2788 ;;Total ram usage:        8 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		___ftadd
  2794 ;;		___ftdiv
  2795 ;;		___lbtoft
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function ___ftpack
  2801  0329                     ___ftpack:	
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2805  0329  0873               	movf	___ftpack@exp,w
  2806  032A  1903               	btfsc	3,2
  2807  032B  2B31               	goto	l1149
  2808  032C  0872               	movf	___ftpack@arg+2,w
  2809  032D  0471               	iorwf	___ftpack@arg+1,w
  2810  032E  0470               	iorwf	___ftpack@arg,w
  2811  032F  1D03               	skipz
  2812  0330  2B44               	goto	l1155
  2813  0331                     l1149:	
  2814  0331  3000               	movlw	0
  2815  0332  00F0               	movwf	?___ftpack
  2816  0333  3000               	movlw	0
  2817  0334  00F1               	movwf	?___ftpack+1
  2818  0335  3000               	movlw	0
  2819  0336  00F2               	movwf	?___ftpack+2
  2820  0337  0008               	return
  2821  0338                     l1153:	
  2822  0338  3001               	movlw	1
  2823  0339  00F5               	movwf	??___ftpack
  2824  033A  0875               	movf	??___ftpack,w
  2825  033B  07F3               	addwf	___ftpack@exp,f
  2826  033C  3001               	movlw	1
  2827  033D                     u1595:	
  2828  033D  1003               	clrc
  2829  033E  0CF2               	rrf	___ftpack@arg+2,f
  2830  033F  0CF1               	rrf	___ftpack@arg+1,f
  2831  0340  0CF0               	rrf	___ftpack@arg,f
  2832  0341  3EFF               	addlw	-1
  2833  0342  1D03               	skipz
  2834  0343  2B3D               	goto	u1595
  2835  0344                     l1155:	
  2836  0344  30FE               	movlw	254
  2837  0345  0572               	andwf	___ftpack@arg+2,w
  2838  0346  1903               	btfsc	3,2
  2839  0347  2B5F               	goto	l378
  2840  0348  2B38               	goto	l1153
  2841  0349                     l1157:	
  2842  0349  3001               	movlw	1
  2843  034A  00F5               	movwf	??___ftpack
  2844  034B  0875               	movf	??___ftpack,w
  2845  034C  07F3               	addwf	___ftpack@exp,f
  2846  034D  3001               	movlw	1
  2847  034E  07F0               	addwf	___ftpack@arg,f
  2848  034F  3000               	movlw	0
  2849  0350  1803               	skipnc
  2850  0351  3001               	movlw	1
  2851  0352  07F1               	addwf	___ftpack@arg+1,f
  2852  0353  3000               	movlw	0
  2853  0354  1803               	skipnc
  2854  0355  3001               	movlw	1
  2855  0356  07F2               	addwf	___ftpack@arg+2,f
  2856  0357  3001               	movlw	1
  2857  0358                     u1615:	
  2858  0358  1003               	clrc
  2859  0359  0CF2               	rrf	___ftpack@arg+2,f
  2860  035A  0CF1               	rrf	___ftpack@arg+1,f
  2861  035B  0CF0               	rrf	___ftpack@arg,f
  2862  035C  3EFF               	addlw	-1
  2863  035D  1D03               	skipz
  2864  035E  2B58               	goto	u1615
  2865  035F                     l378:	
  2866  035F  30FF               	movlw	255
  2867  0360  0572               	andwf	___ftpack@arg+2,w
  2868  0361  1903               	btfsc	3,2
  2869  0362  2B6E               	goto	l1165
  2870  0363  2B49               	goto	l1157
  2871  0364                     l1163:	
  2872  0364  3001               	movlw	1
  2873  0365  02F3               	subwf	___ftpack@exp,f
  2874  0366  3001               	movlw	1
  2875  0367                     u1635:	
  2876  0367  1003               	clrc
  2877  0368  0DF0               	rlf	___ftpack@arg,f
  2878  0369  0DF1               	rlf	___ftpack@arg+1,f
  2879  036A  0DF2               	rlf	___ftpack@arg+2,f
  2880  036B  3EFF               	addlw	-1
  2881  036C  1D03               	skipz
  2882  036D  2B67               	goto	u1635
  2883  036E                     l1165:	
  2884  036E  1BF1               	btfsc	___ftpack@arg+1,7
  2885  036F  2B74               	goto	l385
  2886  0370  3002               	movlw	2
  2887  0371  0273               	subwf	___ftpack@exp,w
  2888  0372  1803               	skipnc
  2889  0373  2B64               	goto	l1163
  2890  0374                     l385:	
  2891  0374  1873               	btfsc	___ftpack@exp,0
  2892  0375  2B7C               	goto	l386
  2893  0376  30FF               	movlw	255
  2894  0377  05F0               	andwf	___ftpack@arg,f
  2895  0378  307F               	movlw	127
  2896  0379  05F1               	andwf	___ftpack@arg+1,f
  2897  037A  30FF               	movlw	255
  2898  037B  05F2               	andwf	___ftpack@arg+2,f
  2899  037C                     l386:	
  2900  037C  1003               	clrc
  2901  037D  0CF3               	rrf	___ftpack@exp,f
  2902  037E  0873               	movf	___ftpack@exp,w
  2903  037F  00F5               	movwf	??___ftpack
  2904  0380  01F6               	clrf	??___ftpack+1
  2905  0381  01F7               	clrf	??___ftpack+2
  2906  0382  3010               	movlw	16
  2907  0383                     u1675:	
  2908  0383  1003               	clrc
  2909  0384  0DF5               	rlf	??___ftpack,f
  2910  0385  0DF6               	rlf	??___ftpack+1,f
  2911  0386  0DF7               	rlf	??___ftpack+2,f
  2912  0387  3EFF               	addlw	-1
  2913  0388  1D03               	skipz
  2914  0389  2B83               	goto	u1675
  2915  038A  0875               	movf	??___ftpack,w
  2916  038B  04F0               	iorwf	___ftpack@arg,f
  2917  038C  0876               	movf	??___ftpack+1,w
  2918  038D  04F1               	iorwf	___ftpack@arg+1,f
  2919  038E  0877               	movf	??___ftpack+2,w
  2920  038F  04F2               	iorwf	___ftpack@arg+2,f
  2921  0390  0874               	movf	___ftpack@sign,w
  2922  0391  1903               	btfsc	3,2
  2923  0392  0008               	return
  2924  0393  17F2               	bsf	___ftpack@arg+2,7
  2925  0394  0008               	return
  2926  0395                     __end_of___ftpack:	
  2927                           
  2928                           	psect	text13
  2929  0103                     __ptext13:	
  2930 ;; *************** function ___awmod *****************
  2931 ;; Defined at:
  2932 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  divisor         2    0[COMMON] int 
  2935 ;;  dividend        2    2[COMMON] int 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  sign            1    6[COMMON] unsigned char 
  2938 ;;  counter         1    5[COMMON] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2    0[COMMON] int 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         4       0       0       0       0
  2949 ;;      Locals:         2       0       0       0       0
  2950 ;;      Temps:          1       0       0       0       0
  2951 ;;      Totals:         7       0       0       0       0
  2952 ;;Total ram usage:        7 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function ___awmod
  2963  0103                     ___awmod:	
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2967  0103  01F6               	clrf	___awmod@sign
  2968  0104  1FF3               	btfss	___awmod@dividend+1,7
  2969  0105  290D               	goto	l1355
  2970  0106  09F2               	comf	___awmod@dividend,f
  2971  0107  09F3               	comf	___awmod@dividend+1,f
  2972  0108  0AF2               	incf	___awmod@dividend,f
  2973  0109  1903               	skipnz
  2974  010A  0AF3               	incf	___awmod@dividend+1,f
  2975  010B  01F6               	clrf	___awmod@sign
  2976  010C  0AF6               	incf	___awmod@sign,f
  2977  010D                     l1355:	
  2978  010D  1FF1               	btfss	___awmod@divisor+1,7
  2979  010E  2914               	goto	l1359
  2980  010F  09F0               	comf	___awmod@divisor,f
  2981  0110  09F1               	comf	___awmod@divisor+1,f
  2982  0111  0AF0               	incf	___awmod@divisor,f
  2983  0112  1903               	skipnz
  2984  0113  0AF1               	incf	___awmod@divisor+1,f
  2985  0114                     l1359:	
  2986  0114  0870               	movf	___awmod@divisor,w
  2987  0115  0471               	iorwf	___awmod@divisor+1,w
  2988  0116  1903               	btfsc	3,2
  2989  0117  2941               	goto	l1377
  2990  0118  01F5               	clrf	___awmod@counter
  2991  0119  0AF5               	incf	___awmod@counter,f
  2992  011A                     l1367:	
  2993  011A  1BF1               	btfsc	___awmod@divisor+1,7
  2994  011B  2928               	goto	l1369
  2995  011C  3001               	movlw	1
  2996  011D                     u2045:	
  2997  011D  1003               	clrc
  2998  011E  0DF0               	rlf	___awmod@divisor,f
  2999  011F  0DF1               	rlf	___awmod@divisor+1,f
  3000  0120  3EFF               	addlw	-1
  3001  0121  1D03               	skipz
  3002  0122  291D               	goto	u2045
  3003  0123  3001               	movlw	1
  3004  0124  00F4               	movwf	??___awmod
  3005  0125  0874               	movf	??___awmod,w
  3006  0126  07F5               	addwf	___awmod@counter,f
  3007  0127  291A               	goto	l1367
  3008  0128                     l1369:	
  3009  0128  0871               	movf	___awmod@divisor+1,w
  3010  0129  0273               	subwf	___awmod@dividend+1,w
  3011  012A  1D03               	skipz
  3012  012B  292E               	goto	u2065
  3013  012C  0870               	movf	___awmod@divisor,w
  3014  012D  0272               	subwf	___awmod@dividend,w
  3015  012E                     u2065:	
  3016  012E  1C03               	skipc
  3017  012F  2936               	goto	l1373
  3018  0130  0870               	movf	___awmod@divisor,w
  3019  0131  02F2               	subwf	___awmod@dividend,f
  3020  0132  0871               	movf	___awmod@divisor+1,w
  3021  0133  1C03               	skipc
  3022  0134  03F3               	decf	___awmod@dividend+1,f
  3023  0135  02F3               	subwf	___awmod@dividend+1,f
  3024  0136                     l1373:	
  3025  0136  3001               	movlw	1
  3026  0137                     u2075:	
  3027  0137  1003               	clrc
  3028  0138  0CF1               	rrf	___awmod@divisor+1,f
  3029  0139  0CF0               	rrf	___awmod@divisor,f
  3030  013A  3EFF               	addlw	-1
  3031  013B  1D03               	skipz
  3032  013C  2937               	goto	u2075
  3033  013D  3001               	movlw	1
  3034  013E  02F5               	subwf	___awmod@counter,f
  3035  013F  1D03               	btfss	3,2
  3036  0140  2928               	goto	l1369
  3037  0141                     l1377:	
  3038  0141  0876               	movf	___awmod@sign,w
  3039  0142  1903               	btfsc	3,2
  3040  0143  2949               	goto	l1381
  3041  0144  09F2               	comf	___awmod@dividend,f
  3042  0145  09F3               	comf	___awmod@dividend+1,f
  3043  0146  0AF2               	incf	___awmod@dividend,f
  3044  0147  1903               	skipnz
  3045  0148  0AF3               	incf	___awmod@dividend+1,f
  3046  0149                     l1381:	
  3047  0149  0873               	movf	___awmod@dividend+1,w
  3048  014A  00F1               	movwf	?___awmod+1
  3049  014B  0872               	movf	___awmod@dividend,w
  3050  014C  00F0               	movwf	?___awmod
  3051  014D  0008               	return
  3052  014E                     __end_of___awmod:	
  3053                           
  3054                           	psect	text14
  3055  014E                     __ptext14:	
  3056 ;; *************** function ___awdiv *****************
  3057 ;; Defined at:
  3058 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  divisor         2    0[COMMON] int 
  3061 ;;  dividend        2    2[COMMON] int 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  quotient        2    7[COMMON] int 
  3064 ;;  sign            1    6[COMMON] unsigned char 
  3065 ;;  counter         1    5[COMMON] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2    0[COMMON] int 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3075 ;;      Params:         4       0       0       0       0
  3076 ;;      Locals:         4       0       0       0       0
  3077 ;;      Temps:          1       0       0       0       0
  3078 ;;      Totals:         9       0       0       0       0
  3079 ;;Total ram usage:        9 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function ___awdiv
  3090  014E                     ___awdiv:	
  3091                           
  3092                           ;incstack = 0
  3093                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3094  014E  01F6               	clrf	___awdiv@sign
  3095  014F  1FF1               	btfss	___awdiv@divisor+1,7
  3096  0150  2958               	goto	l1311
  3097  0151  09F0               	comf	___awdiv@divisor,f
  3098  0152  09F1               	comf	___awdiv@divisor+1,f
  3099  0153  0AF0               	incf	___awdiv@divisor,f
  3100  0154  1903               	skipnz
  3101  0155  0AF1               	incf	___awdiv@divisor+1,f
  3102  0156  01F6               	clrf	___awdiv@sign
  3103  0157  0AF6               	incf	___awdiv@sign,f
  3104  0158                     l1311:	
  3105  0158  1FF3               	btfss	___awdiv@dividend+1,7
  3106  0159  2963               	goto	l1317
  3107  015A  09F2               	comf	___awdiv@dividend,f
  3108  015B  09F3               	comf	___awdiv@dividend+1,f
  3109  015C  0AF2               	incf	___awdiv@dividend,f
  3110  015D  1903               	skipnz
  3111  015E  0AF3               	incf	___awdiv@dividend+1,f
  3112  015F  3001               	movlw	1
  3113  0160  00F4               	movwf	??___awdiv
  3114  0161  0874               	movf	??___awdiv,w
  3115  0162  06F6               	xorwf	___awdiv@sign,f
  3116  0163                     l1317:	
  3117  0163  01F7               	clrf	___awdiv@quotient
  3118  0164  01F8               	clrf	___awdiv@quotient+1
  3119  0165  0870               	movf	___awdiv@divisor,w
  3120  0166  0471               	iorwf	___awdiv@divisor+1,w
  3121  0167  1903               	btfsc	3,2
  3122  0168  299A               	goto	l1339
  3123  0169  01F5               	clrf	___awdiv@counter
  3124  016A  0AF5               	incf	___awdiv@counter,f
  3125  016B                     l1327:	
  3126  016B  1BF1               	btfsc	___awdiv@divisor+1,7
  3127  016C  2979               	goto	l1329
  3128  016D  3001               	movlw	1
  3129  016E                     u1945:	
  3130  016E  1003               	clrc
  3131  016F  0DF0               	rlf	___awdiv@divisor,f
  3132  0170  0DF1               	rlf	___awdiv@divisor+1,f
  3133  0171  3EFF               	addlw	-1
  3134  0172  1D03               	skipz
  3135  0173  296E               	goto	u1945
  3136  0174  3001               	movlw	1
  3137  0175  00F4               	movwf	??___awdiv
  3138  0176  0874               	movf	??___awdiv,w
  3139  0177  07F5               	addwf	___awdiv@counter,f
  3140  0178  296B               	goto	l1327
  3141  0179                     l1329:	
  3142  0179  3001               	movlw	1
  3143  017A                     u1965:	
  3144  017A  1003               	clrc
  3145  017B  0DF7               	rlf	___awdiv@quotient,f
  3146  017C  0DF8               	rlf	___awdiv@quotient+1,f
  3147  017D  3EFF               	addlw	-1
  3148  017E  1D03               	skipz
  3149  017F  297A               	goto	u1965
  3150  0180  0871               	movf	___awdiv@divisor+1,w
  3151  0181  0273               	subwf	___awdiv@dividend+1,w
  3152  0182  1D03               	skipz
  3153  0183  2986               	goto	u1975
  3154  0184  0870               	movf	___awdiv@divisor,w
  3155  0185  0272               	subwf	___awdiv@dividend,w
  3156  0186                     u1975:	
  3157  0186  1C03               	skipc
  3158  0187  298F               	goto	l1335
  3159  0188  0870               	movf	___awdiv@divisor,w
  3160  0189  02F2               	subwf	___awdiv@dividend,f
  3161  018A  0871               	movf	___awdiv@divisor+1,w
  3162  018B  1C03               	skipc
  3163  018C  03F3               	decf	___awdiv@dividend+1,f
  3164  018D  02F3               	subwf	___awdiv@dividend+1,f
  3165  018E  1477               	bsf	___awdiv@quotient,0
  3166  018F                     l1335:	
  3167  018F  3001               	movlw	1
  3168  0190                     u1985:	
  3169  0190  1003               	clrc
  3170  0191  0CF1               	rrf	___awdiv@divisor+1,f
  3171  0192  0CF0               	rrf	___awdiv@divisor,f
  3172  0193  3EFF               	addlw	-1
  3173  0194  1D03               	skipz
  3174  0195  2990               	goto	u1985
  3175  0196  3001               	movlw	1
  3176  0197  02F5               	subwf	___awdiv@counter,f
  3177  0198  1D03               	btfss	3,2
  3178  0199  2979               	goto	l1329
  3179  019A                     l1339:	
  3180  019A  0876               	movf	___awdiv@sign,w
  3181  019B  1903               	btfsc	3,2
  3182  019C  29A2               	goto	l1343
  3183  019D  09F7               	comf	___awdiv@quotient,f
  3184  019E  09F8               	comf	___awdiv@quotient+1,f
  3185  019F  0AF7               	incf	___awdiv@quotient,f
  3186  01A0  1903               	skipnz
  3187  01A1  0AF8               	incf	___awdiv@quotient+1,f
  3188  01A2                     l1343:	
  3189  01A2  0878               	movf	___awdiv@quotient+1,w
  3190  01A3  00F1               	movwf	?___awdiv+1
  3191  01A4  0877               	movf	___awdiv@quotient,w
  3192  01A5  00F0               	movwf	?___awdiv
  3193  01A6  0008               	return
  3194  01A7                     __end_of___awdiv:	
  3195                           
  3196                           	psect	text15
  3197  0204                     __ptext15:	
  3198 ;; *************** function _Read_Data *****************
  3199 ;; Defined at:
  3200 ;;		line 66 in file "newmain.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  i               1    4[COMMON] unsigned char 
  3205 ;;  k               1    3[COMMON] unsigned char 
  3206 ;;  _data           1    2[COMMON] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      unsigned char 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       0       0       0       0
  3217 ;;      Locals:         3       0       0       0       0
  3218 ;;      Temps:          2       0       0       0       0
  3219 ;;      Totals:         5       0       0       0       0
  3220 ;;Total ram usage:        5 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           
  3230                           ;psect for function _Read_Data
  3231  0204                     _Read_Data:	
  3232                           
  3233                           ;newmain.c: 67: uint8_t i, k, _data = 0;
  3234                           
  3235                           ;incstack = 0
  3236                           ; Regs used in _Read_Data: [wreg+status,2+status,0]
  3237  0204  01F2               	clrf	Read_Data@_data
  3238                           
  3239                           ;newmain.c: 69: if(Time_out)
  3240  0205  087D               	movf	_Time_out,w
  3241  0206  1903               	btfsc	3,2
  3242  0207  2A0A               	goto	l1229
  3243                           
  3244                           ;newmain.c: 70: return 0;
  3245  0208  3000               	movlw	0
  3246  0209  0008               	return
  3247  020A                     l1229:	
  3248                           
  3249                           ;newmain.c: 72: for(i = 0; i < 8; i++) {
  3250  020A  01F4               	clrf	Read_Data@i
  3251  020B  3008               	movlw	8
  3252  020C  0274               	subwf	Read_Data@i,w
  3253  020D  1803               	btfsc	3,0
  3254  020E  2A63               	goto	l1261
  3255  020F                     l1235:	
  3256                           
  3257                           ;newmain.c: 73: k = 0;
  3258  020F  01F3               	clrf	Read_Data@k
  3259                           
  3260                           ;newmain.c: 74: while(!RB4) {
  3261  0210  2A12               	goto	l63
  3262  0211                     l65:	
  3263                           ;newmain.c: 78: break;
  3264                           
  3265                           
  3266                           ;newmain.c: 79: }
  3267                           ;newmain.c: 80: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3268  0211  2A12               	nop2	;2 cycle nop
  3269  0212                     l63:	
  3270  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0214  1A06               	btfsc	6,4	;volatile
  3273  0215  2A20               	goto	l1243
  3274                           
  3275                           ;newmain.c: 75: k++;
  3276  0216  3001               	movlw	1
  3277  0217  00F0               	movwf	??_Read_Data
  3278  0218  0870               	movf	??_Read_Data,w
  3279  0219  07F3               	addwf	Read_Data@k,f
  3280                           
  3281                           ;newmain.c: 76: if(k > 100) {
  3282  021A  3065               	movlw	101
  3283  021B  0273               	subwf	Read_Data@k,w
  3284  021C  1C03               	skipc
  3285  021D  2A11               	goto	l65
  3286                           
  3287                           ;newmain.c: 77: Time_out = 1;
  3288  021E  01FD               	clrf	_Time_out
  3289  021F  0AFD               	incf	_Time_out,f
  3290  0220                     l1243:	
  3291                           
  3292                           ;newmain.c: 81: }
  3293                           ;newmain.c: 82: _delay((unsigned long)((30)*(8000000/4000000.0)));
  3294  0220  3013               	movlw	19
  3295  0221  00F0               	movwf	??_Read_Data
  3296  0222                     u2557:	
  3297  0222  0BF0               	decfsz	??_Read_Data,f
  3298  0223  2A22               	goto	u2557
  3299  0224  2A25               	nop2
  3300                           
  3301                           ;newmain.c: 83: if(!RB4)
  3302  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0227  1A06               	btfsc	6,4	;volatile
  3305  0228  2A3B               	goto	l1249
  3306                           
  3307                           ;newmain.c: 84: _data &= ~(1 << (7 - i));
  3308  0229  3001               	movlw	1
  3309  022A  00F0               	movwf	??_Read_Data
  3310  022B  0374               	decf	Read_Data@i,w
  3311  022C  3AFF               	xorlw	255
  3312  022D  3E07               	addlw	7
  3313  022E  3E01               	addlw	1
  3314  022F  2A32               	goto	u1814
  3315  0230                     u1815:	
  3316  0230  1003               	clrc
  3317  0231  0DF0               	rlf	??_Read_Data,f
  3318  0232                     u1814:	
  3319  0232  3EFF               	addlw	-1
  3320  0233  1D03               	skipz
  3321  0234  2A30               	goto	u1815
  3322  0235  0870               	movf	??_Read_Data,w
  3323  0236  3AFF               	xorlw	255
  3324  0237  00F1               	movwf	??_Read_Data+1
  3325  0238  0871               	movf	??_Read_Data+1,w
  3326  0239  05F2               	andwf	Read_Data@_data,f
  3327  023A  2A5B               	goto	l1257
  3328  023B                     l1249:	
  3329                           
  3330                           ;newmain.c: 85: else {
  3331                           ;newmain.c: 86: _data |= (1 << (7 - i));
  3332  023B  3001               	movlw	1
  3333  023C  00F0               	movwf	??_Read_Data
  3334  023D  0374               	decf	Read_Data@i,w
  3335  023E  3AFF               	xorlw	255
  3336  023F  3E07               	addlw	7
  3337  0240  3E01               	addlw	1
  3338  0241  2A44               	goto	u1824
  3339  0242                     u1825:	
  3340  0242  1003               	clrc
  3341  0243  0DF0               	rlf	??_Read_Data,f
  3342  0244                     u1824:	
  3343  0244  3EFF               	addlw	-1
  3344  0245  1D03               	skipz
  3345  0246  2A42               	goto	u1825
  3346  0247  0870               	movf	??_Read_Data,w
  3347  0248  00F1               	movwf	??_Read_Data+1
  3348  0249  0871               	movf	??_Read_Data+1,w
  3349  024A  04F2               	iorwf	Read_Data@_data,f
  3350                           
  3351                           ;newmain.c: 87: while(RB4) {
  3352  024B  2A4D               	goto	l69
  3353  024C                     l71:	
  3354                           ;newmain.c: 91: break;
  3355                           
  3356                           
  3357                           ;newmain.c: 92: }
  3358                           ;newmain.c: 93: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3359  024C  2A4D               	nop2	;2 cycle nop
  3360  024D                     l69:	
  3361  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3362  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3363  024F  1E06               	btfss	6,4	;volatile
  3364  0250  2A5B               	goto	l1257
  3365                           
  3366                           ;newmain.c: 88: k++;
  3367  0251  3001               	movlw	1
  3368  0252  00F0               	movwf	??_Read_Data
  3369  0253  0870               	movf	??_Read_Data,w
  3370  0254  07F3               	addwf	Read_Data@k,f
  3371                           
  3372                           ;newmain.c: 89: if(k > 100) {
  3373  0255  3065               	movlw	101
  3374  0256  0273               	subwf	Read_Data@k,w
  3375  0257  1C03               	skipc
  3376  0258  2A4C               	goto	l71
  3377                           
  3378                           ;newmain.c: 90: Time_out = 1;
  3379  0259  01FD               	clrf	_Time_out
  3380  025A  0AFD               	incf	_Time_out,f
  3381  025B                     l1257:	
  3382  025B  3001               	movlw	1
  3383  025C  00F0               	movwf	??_Read_Data
  3384  025D  0870               	movf	??_Read_Data,w
  3385  025E  07F4               	addwf	Read_Data@i,f
  3386  025F  3008               	movlw	8
  3387  0260  0274               	subwf	Read_Data@i,w
  3388  0261  1C03               	skipc
  3389  0262  2A0F               	goto	l1235
  3390  0263                     l1261:	
  3391                           
  3392                           ;newmain.c: 94: }
  3393                           ;newmain.c: 95: }
  3394                           ;newmain.c: 96: }
  3395                           ;newmain.c: 97: return _data;
  3396  0263  0872               	movf	Read_Data@_data,w
  3397  0264  0008               	return
  3398  0265                     __end_of_Read_Data:	
  3399                           
  3400                           	psect	text16
  3401  00D2                     __ptext16:	
  3402 ;; *************** function _LCD_Init *****************
  3403 ;; Defined at:
  3404 ;;		line 70 in file "lcd.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0
  3420 ;;      Temps:          2       0       0       0       0
  3421 ;;      Totals:         2       0       0       0       0
  3422 ;;Total ram usage:        2 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    1
  3425 ;; This function calls:
  3426 ;;		_LCD_Command
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _LCD_Init
  3434  00D2                     _LCD_Init:	
  3435                           
  3436                           ;lcd.c: 71: _delay((unsigned long)((20)*(8000000/4000.0)));
  3437                           
  3438                           ;incstack = 0
  3439                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3440  00D2  3034               	movlw	52
  3441  00D3  00F3               	movwf	??_LCD_Init+1
  3442  00D4  30F1               	movlw	241
  3443  00D5  00F2               	movwf	??_LCD_Init
  3444  00D6                     u2567:	
  3445  00D6  0BF2               	decfsz	??_LCD_Init,f
  3446  00D7  28D6               	goto	u2567
  3447  00D8  0BF3               	decfsz	??_LCD_Init+1,f
  3448  00D9  28D6               	goto	u2567
  3449  00DA  28DB               	nop2
  3450                           
  3451                           ;lcd.c: 74: LCD_Command(0x02);
  3452  00DB  3002               	movlw	2
  3453  00DC  120A  118A  2265  120A  118A  	fcall	_LCD_Command
  3454                           
  3455                           ;lcd.c: 75: LCD_Command(0x28);
  3456  00E1  3028               	movlw	40
  3457  00E2  120A  118A  2265  120A  118A  	fcall	_LCD_Command
  3458                           
  3459                           ;lcd.c: 76: LCD_Command(0x0C);
  3460  00E7  300C               	movlw	12
  3461  00E8  120A  118A  2265  120A  118A  	fcall	_LCD_Command
  3462                           
  3463                           ;lcd.c: 77: LCD_Command(0x06);
  3464  00ED  3006               	movlw	6
  3465  00EE  120A  118A  2265  120A  118A  	fcall	_LCD_Command
  3466                           
  3467                           ;lcd.c: 78: LCD_Command(0x01);
  3468  00F3  3001               	movlw	1
  3469  00F4  120A  118A  2265  120A  118A  	fcall	_LCD_Command
  3470                           
  3471                           ;lcd.c: 79: _delay((unsigned long)((2)*(8000000/4000.0)));
  3472  00F9  3006               	movlw	6
  3473  00FA  00F3               	movwf	??_LCD_Init+1
  3474  00FB  3030               	movlw	48
  3475  00FC  00F2               	movwf	??_LCD_Init
  3476  00FD                     u2577:	
  3477  00FD  0BF2               	decfsz	??_LCD_Init,f
  3478  00FE  28FD               	goto	u2577
  3479  00FF  0BF3               	decfsz	??_LCD_Init+1,f
  3480  0100  28FD               	goto	u2577
  3481  0101  0000               	nop
  3482  0102  0008               	return
  3483  0103                     __end_of_LCD_Init:	
  3484                           
  3485                           	psect	text17
  3486  0265                     __ptext17:	
  3487 ;; *************** function _LCD_Command *****************
  3488 ;; Defined at:
  3489 ;;		line 7 in file "lcd.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  cmd             1    wreg     unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  cmd             1    1[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0
  3504 ;;      Locals:         1       0       0       0       0
  3505 ;;      Temps:          1       0       0       0       0
  3506 ;;      Totals:         2       0       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_LCD_Init
  3513 ;;		_LCD_SetCursor
  3514 ;;		_LCD_Clear
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _LCD_Command
  3520  0265                     _LCD_Command:	
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _LCD_Command: [wreg]
  3524                           ;LCD_Command@cmd stored from wreg
  3525  0265  00F1               	movwf	LCD_Command@cmd
  3526                           
  3527                           ;lcd.c: 8: RD0 = 0;
  3528  0266  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0267  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0268  1008               	bcf	8,0	;volatile
  3531                           
  3532                           ;lcd.c: 9: RD1 = 0;
  3533  0269  1088               	bcf	8,1	;volatile
  3534                           
  3535                           ;lcd.c: 12: RD6 = (cmd & 0x80) ? 1 : 0;
  3536  026A  1FF1               	btfss	LCD_Command@cmd,7
  3537  026B  2A70               	goto	u1230
  3538  026C  1283               	bcf	3,5	;RP0=0, select bank0
  3539  026D  1303               	bcf	3,6	;RP1=0, select bank0
  3540  026E  1708               	bsf	8,6	;volatile
  3541  026F  2A73               	goto	u1244
  3542  0270                     u1230:	
  3543  0270  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0271  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0272  1308               	bcf	8,6	;volatile
  3546  0273                     u1244:	
  3547                           
  3548                           ;lcd.c: 13: RD5 = (cmd & 0x40) ? 1 : 0;
  3549  0273  1F71               	btfss	LCD_Command@cmd,6
  3550  0274  2A79               	goto	u1250
  3551  0275  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0276  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0277  1688               	bsf	8,5	;volatile
  3554  0278  2A7C               	goto	u1264
  3555  0279                     u1250:	
  3556  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3557  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3558  027B  1288               	bcf	8,5	;volatile
  3559  027C                     u1264:	
  3560                           
  3561                           ;lcd.c: 14: RD4 = (cmd & 0x20) ? 1 : 0;
  3562  027C  1EF1               	btfss	LCD_Command@cmd,5
  3563  027D  2A82               	goto	u1270
  3564  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3565  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0280  1608               	bsf	8,4	;volatile
  3567  0281  2A85               	goto	u1284
  3568  0282                     u1270:	
  3569  0282  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0283  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0284  1208               	bcf	8,4	;volatile
  3572  0285                     u1284:	
  3573                           
  3574                           ;lcd.c: 15: RD3 = (cmd & 0x10) ? 1 : 0;
  3575  0285  1E71               	btfss	LCD_Command@cmd,4
  3576  0286  2A8B               	goto	u1290
  3577  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0289  1588               	bsf	8,3	;volatile
  3580  028A  2A8E               	goto	u1304
  3581  028B                     u1290:	
  3582  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3583  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3584  028D  1188               	bcf	8,3	;volatile
  3585  028E                     u1304:	
  3586                           
  3587                           ;lcd.c: 17: RD2 = 1;
  3588  028E  1508               	bsf	8,2	;volatile
  3589                           
  3590                           ;lcd.c: 18: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3591  028F  2A90               	nop2	;2 cycle nop
  3592                           
  3593                           ;lcd.c: 19: RD2 = 0;
  3594  0290  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0291  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0292  1108               	bcf	8,2	;volatile
  3597                           
  3598                           ;lcd.c: 20: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3599  0293  3042               	movlw	66
  3600  0294  00F0               	movwf	??_LCD_Command
  3601  0295                     u2587:	
  3602  0295  0BF0               	decfsz	??_LCD_Command,f
  3603  0296  2A95               	goto	u2587
  3604  0297  0000               	nop
  3605                           
  3606                           ;lcd.c: 23: RD6 = (cmd & 0x08) ? 1 : 0;
  3607  0298  1DF1               	btfss	LCD_Command@cmd,3
  3608  0299  2A9E               	goto	u1310
  3609  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3610  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3611  029C  1708               	bsf	8,6	;volatile
  3612  029D  2AA1               	goto	l1095
  3613  029E                     u1310:	
  3614  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3615  029F  1303               	bcf	3,6	;RP1=0, select bank0
  3616  02A0  1308               	bcf	8,6	;volatile
  3617  02A1                     l1095:	
  3618                           
  3619                           ;lcd.c: 24: RD5 = (cmd & 0x04) ? 1 : 0;
  3620  02A1  1D71               	btfss	LCD_Command@cmd,2
  3621  02A2  2AA7               	goto	u1330
  3622  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3623  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3624  02A5  1688               	bsf	8,5	;volatile
  3625  02A6  2AAA               	goto	l1097
  3626  02A7                     u1330:	
  3627  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3628  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3629  02A9  1288               	bcf	8,5	;volatile
  3630  02AA                     l1097:	
  3631                           
  3632                           ;lcd.c: 25: RD4 = (cmd & 0x02) ? 1 : 0;
  3633  02AA  1CF1               	btfss	LCD_Command@cmd,1
  3634  02AB  2AB0               	goto	u1350
  3635  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3636  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  3637  02AE  1608               	bsf	8,4	;volatile
  3638  02AF  2AB3               	goto	l1099
  3639  02B0                     u1350:	
  3640  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3641  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3642  02B2  1208               	bcf	8,4	;volatile
  3643  02B3                     l1099:	
  3644                           
  3645                           ;lcd.c: 26: RD3 = (cmd & 0x01) ? 1 : 0;
  3646  02B3  1C71               	btfss	LCD_Command@cmd,0
  3647  02B4  2AB9               	goto	u1370
  3648  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3649  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3650  02B7  1588               	bsf	8,3	;volatile
  3651  02B8  2ABC               	goto	l1101
  3652  02B9                     u1370:	
  3653  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3654  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3655  02BB  1188               	bcf	8,3	;volatile
  3656  02BC                     l1101:	
  3657                           
  3658                           ;lcd.c: 28: RD2 = 1;
  3659  02BC  1508               	bsf	8,2	;volatile
  3660                           
  3661                           ;lcd.c: 29: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3662  02BD  2ABE               	nop2	;2 cycle nop
  3663                           
  3664                           ;lcd.c: 30: RD2 = 0;
  3665  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3666  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3667  02C0  1108               	bcf	8,2	;volatile
  3668                           
  3669                           ;lcd.c: 31: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3670  02C1  3042               	movlw	66
  3671  02C2  00F0               	movwf	??_LCD_Command
  3672  02C3                     u2597:	
  3673  02C3  0BF0               	decfsz	??_LCD_Command,f
  3674  02C4  2AC3               	goto	u2597
  3675  02C5  0000               	nop
  3676  02C6  0008               	return
  3677  02C7                     __end_of_LCD_Command:	
  3678  007E                     btemp	set	126	;btemp
  3679  007E                     wtemp0	set	126


Data Sizes:
    Strings     62
    Constant    0
    Data        32
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      67
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[16]), STR_4(CODE[12]), STR_3(CODE[16]), message2(BANK1[16]), 
		 -> message1(BANK0[16]), STR_2(CODE[10]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_update_leds
    _update_leds->___ftge
    _LCD_String->_LCD_Char
    _LCD_SetCursor->_LCD_Command
    _LCD_Clear->_LCD_Command
    ___lbtoft->___ftpack
    ___ftdiv->___lbtoft
    ___ftadd->___lbtoft
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    _main->___ftadd
    ___ftdiv->___lbtoft
    ___ftadd->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   11670
                                             33 BANK0     13    13      0
                          _LCD_Clear
                           _LCD_Init
                      _LCD_SetCursor
                         _LCD_String
                          _Read_Data
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                           ___lbtoft
                     _check_response
                       _start_signal
                        _update_leds
 ---------------------------------------------------------------------------------
 (1) _update_leds                                          4     1      3    2234
                                             12 COMMON     1     1      0
                                              0 BANK0      3     0      3
                          _LCD_Clear
                      _LCD_SetCursor
                         _LCD_String
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     666
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     592
                                              2 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursor                                        4     3      1     637
                                              2 COMMON     4     3      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0     176
                                              2 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _start_signal                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _check_response                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1690
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                              4 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    2694
                                             20 BANK0     13     7      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     724
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Read_Data                                            5     5      0     162
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              2 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_SetCursor
     _LCD_Command
   _LCD_String
     _LCD_Char
   _Read_Data
   ___awdiv
   ___awmod
   ___ftadd
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _check_response
   _start_signal
   _update_leds
     _LCD_Clear
       _LCD_Command
     _LCD_SetCursor
       _LCD_Command
     _LCD_String
       _LCD_Char
     ___ftge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 03 20:41:03 2025

            _update_leds 0395    __size_of_start_signal 001B                        pc 0002  
            __CFG_CP$OFF 0000             ?_LCD_Command 0070                       l71 024C  
                     l63 0212                       l80 0429                       l65 0211  
                     l69 024D             ___awdiv@sign 0076                       fsr 0004  
            ?_LCD_String 0072            _LCD_SetCursor 0FDE             ___ftadd@exp1 0040  
           ___ftadd@exp2 003F             ___ftadd@sign 003E                      l409 058D  
                    l385 0374                      l386 037C                      l378 035F  
                    _RB4 0034                      _RD0 0040                      _RD1 0041  
                    _RC4 003C                      _RD2 0042                      _RC5 003D  
                    _RD3 0043                      _RC6 003E                      _RD4 0044  
                    _RC7 003F                      _RD5 0045                      _RD6 0046  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 002E             ___ftdiv@sign 0033                     l1101 02BC  
                   l1113 0303                     l1115 030C                     l1133 0FE5  
                   l1117 0315                     l1311 0158                     l1119 031E  
                   l1143 00AF                     l1153 0338                     l1401 0524  
                   l1217 0076                     l1243 0220                     l1235 020F  
                   l1163 0364                     l1155 0344                     l1261 0263  
                   l1229 020A                     l1317 0163                     l1165 036E  
                   l1157 0349                     l1149 0331                     l1421 055F  
                   l1413 053E                     l1181 01CE                     l1095 02A1  
                   l1343 01A2                     l1335 018F                     l1327 016B  
                   l1431 057D                     l1423 0564                     l1097 02AA  
                   l1257 025B                     l1249 023B                     l1329 0179  
                   l1441 05B1                     l1433 0589                     l1425 0568  
                   l1185 01F5                     l1281 03F8                     l1099 02B3  
                   l1339 019A                     l1355 010D                     l1451 05D4  
                   l1419 0553                     l1275 03CA                     l1381 0149  
                   l1373 0136                     l1437 059F                     l1461 0445  
                   l1285 0410                     l1541 066A                     l1367 011A  
                   l1359 0114                     l1391 050E                     l1527 0614  
                   l1369 0128                     l1377 0141                     l1481 04A0  
                   l1561 07A4                     l1395 0515                     l1467 045B  
                   l1557 0796                     l1567 07CE                     l1489 04BF  
                   STR_1 0049                     STR_2 003F                     STR_3 0013  
                   STR_4 0033                     STR_5 0023                     u1310 029E  
                   u1230 0270                     u1304 028E                     u1330 02A7  
                   u1250 0279                     u1410 02DB                     u1244 0273  
                   u1404 02D5                     u2045 011D                     u1350 02B0  
                   u1270 0282                     u1510 0312                     u1430 02E4  
                   u1264 027C                     u1424 02DE                     u2065 012E  
                   u2225 0554                     u1370 02B9                     u1290 028B  
                   u1530 031B                     u1450 02ED                     u2075 0137  
                   u1284 0285                     u1444 02E7                     u2405 04C0  
                   u1701 01C1                     u1470 0300                     u1390 02D2  
                   u1702 01C2                     u1615 0358                     u2255 0569  
                   u1703 01C7                     u1464 02F0                     u1704 01C8  
                   u1721 01E8                     u1490 0309                     u1722 01E9  
                   u1635 0367                     u2195 053F                     u2507 0082  
                   u1723 01EE                     u1724 01EF                     u2285 057E  
                   u2365 046D                     u2517 008C                     u2445 0690  
                   u1814 0232                     u1815 0230                     u2375 047F  
                   u2527 0061                     u1824 0244                     u1825 0242  
                   u2385 04A1                     u2537 006A                     u2457 060E  
                   u1675 0383                     u1595 033D                     u2395 04B2  
                   u2547 0072                     u2467 07D6                     u2557 0222  
                   u2477 02F7                     u2567 00D6                     u2487 0325  
                   u2577 00FD                     u1945 016E                     u2497 0FB8  
                   u2587 0295                     u2597 02C3                     u1965 017A  
                   u1975 0186                     u1985 0190           _check_response 005F  
           __CFG_WRT$OFF 0000                     _main 05EE             ___ftpack@arg 0070  
     __size_of_LCD_Clear 0010             ___ftpack@exp 0073               Read_Data@i 0074  
             Read_Data@k 0073             _start_signal 0078                     btemp 007E  
                   start 0000         __end_of_LCD_Char 0329         __end_of_LCD_Init 0103  
           LCD_Char@data 0071           ?_LCD_SetCursor 0072                    ?_main 0070  
        __end_of___awdiv 01A7          __end_of___ftadd 05EE            __CFG_WDTE$OFF 0000  
        __end_of___awmod 014E          __end_of___ftdiv 04E5          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _TRISD 0088   __end_of_check_response 0078  
          ___ftpack@sign 0074           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E      __size_of_LCD_String 0023  
        __initialization 07DD             __end_of_main 07DD                   ??_main 0041  
      __end_of_LCD_Clear 0FBE          ?_check_response 0070         ___awdiv@dividend 0072  
       __end_of___ftpack 0395         __end_of___lbtoft 00AF                   _TRISB4 0434  
                 _TRISC4 043C                   _TRISC5 043D                   _TRISC6 043E  
                 _TRISC7 043F       __size_of_Read_Data 0061     LCD_SetCursor@address 0075  
         __CFG_PWRTE$OFF 0000                   ___ftge 01A7                ??___awdiv 0074  
              ??___ftadd 003A                ??___awmod 0074          ??_LCD_SetCursor 0073  
              ??___ftdiv 002A         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075     __size_of_LCD_Command 0062                ?_LCD_Char 0070  
__end_of__initialization 07FC                ?_LCD_Init 0070               ___ftadd@f1 0034  
             ___ftadd@f2 0037               ___ftge@ff1 0070               ___ftge@ff2 0073  
             ___ftdiv@f1 0027               ___ftdiv@f2 0024               ___ftdiv@f3 002F  
             ___lbtoft@c 007B             ?_update_leds 0020           __pcstackCOMMON 0070  
           __pidataBANK0 0FCE             __pidataBANK1 0FBE             ??_LCD_String 0074  
      __end_of_Read_Data 0265               __pbssBANK0 005E               ??_LCD_Char 0070  
             ??_LCD_Init 0072       __end_of_LCD_String 00D2               __pmaintext 05EE  
                ?___ftge 0070                ?___ftpack 0070                ?___lbtoft 0078  
             __stringtab 0003            LCD_String@str 0072                  _T_byte1 0062  
                _T_byte2 0061          __size_of___ftge 005D                  ___awdiv 014E  
                ___ftadd 04E5                  ___awmod 0103                  ___ftdiv 042D  
             ??___ftpack 0075               ??___lbtoft 0020                  __ptext1 0395  
                __ptext2 01A7                  __ptext3 00AF                  __ptext4 02C7  
                __ptext5 0FDE                  __ptext6 0FAE                  __ptext7 0078  
                __ptext8 005F                  __ptext9 0093         ??_check_response 0070  
       ___awmod@dividend 0072                _LCD_Clear 0FAE     end_of_initialization 07FC  
       LCD_SetCursor@col 0072         LCD_SetCursor@row 0074           LCD_Command@cmd 0071  
   __size_of_update_leds 0098               ?_LCD_Clear 0070              ___ftdiv@exp 0032  
      __size_of_LCD_Char 0062        __size_of_LCD_Init 0031            ??_LCD_Command 0070  
         __end_of___ftge 0204    __end_of_LCD_SetCursor 0FEF      start_initialization 07DD  
              _Read_Data 0204            ?_start_signal 0070                 ??___ftge 0076  
             init_fetch0 0FEF              __pdataBANK0 004E              __pdataBANK1 00A0  
 update_leds@temperature 0020        __size_of___ftpack 006C        __size_of___lbtoft 001C  
    __end_of_LCD_Command 02C7              __pbssCOMMON 007D                ___latbits 0002  
          __pcstackBANK0 0020               ?_Read_Data 0070              ??_LCD_Clear 0072  
         ??_start_signal 0070                 ?___awdiv 0070                 ?___ftadd 0034  
               ?___awmod 0070                 ?___ftdiv 0024                __pstrings 0003  
               _LCD_Char 02C7                 _LCD_Init 00D2              _LCD_Command 0265  
            __stringbase 0012                 _RH_byte1 0060                 _RH_byte2 005F  
               _CheckSum 005E              ??_Read_Data 0070            ??_update_leds 007C  
               _Time_out 007D         __size_of___awdiv 0059         __size_of___ftadd 0109  
       __size_of___awmod 004B         __size_of___ftdiv 00B8                 ___ftpack 0329  
               ___lbtoft 0093       __end_of__stringtab 0013     __end_of_start_signal 0093  
               __ptext10 042D                 __ptext11 04E5                 __ptext12 0329  
               __ptext13 0103                 __ptext14 014E                 __ptext15 0204  
               __ptext16 00D2                 __ptext17 0265  __size_of_check_response 0019  
          __size_of_main 01EF                 _message1 004E                 _message2 00A0  
         Read_Data@_data 0072               _LCD_String 00AF      __end_of_update_leds 042D  
        main@temperature 004B                 init_ram0 0FF3   __size_of_LCD_SetCursor 0011  
              stringcode 000D                 stringdir 000D                 stringtab 0003  
